var FeatureRequirement_datatable = [ {id: 1, FeatureID:"",Feature: "Configurations", MoSCoW: "", Description: "", FeatureDataType: "Category", FeatureCategory: "", FeatureParent: "", FeatureSupportedAlternatives: "", FeatureCriterionValue: "", _children: [{id: 636293703867183732,FeatureID:"636293703867183732",Feature: "Advanced server configuration", MoSCoW: "", Description: "2 CPU (2 Socket), 48 Cores (2 × 24 cores per socket), 3 TB (Ram), 24 × 960 GB (SSD) ,Failover (active/active), Unlimited DB Size", FeatureDataType: "Boolean", FeatureCategory: "Configurations", FeatureParent: "NULL", FeatureSupportedAlternatives: "23", FeatureCriterionValue: ""},{id: 636293703845943384,FeatureID:"636293703845943384",Feature: "Intermediate server configuration", MoSCoW: "", Description: "2 CPU (2 Socket), 12 Cores (6 cores per socket), 2 × 256 GB (Ram), 8 × 960 GB (SSD), Failover (active/passive), 15 TB DB Size", FeatureDataType: "Boolean", FeatureCategory: "Configurations", FeatureParent: "NULL", FeatureSupportedAlternatives: "28", FeatureCriterionValue: ""},{id: 636293703822705116,FeatureID:"636293703822705116",Feature: "Basic server configuration", MoSCoW: "", Description: "1 CPU (1 Socket), 8 Cores, 64 GB (Ram), 2 × 256 GB (SSD), 25 GB DB Size", FeatureDataType: "Boolean", FeatureCategory: "Configurations", FeatureParent: "NULL", FeatureSupportedAlternatives: "36", FeatureCriterionValue: ""},{id: 636293703794625228,FeatureID:"636293703794625228",Feature: "PC", MoSCoW: "", Description: "1 CPU (1 Socket), 4 Cores, 16 GB (Ram), 256 GB (SSD), 5 GB DB Size", FeatureDataType: "Boolean", FeatureCategory: "Configurations", FeatureParent: "NULL", FeatureSupportedAlternatives: "53", FeatureCriterionValue: ""},] },{id: 2, FeatureID:"",Feature: "Replication", MoSCoW: "", Description: "", FeatureDataType: "Category", FeatureCategory: "", FeatureParent: "", FeatureSupportedAlternatives: "", FeatureCriterionValue: "", _children: [{id: 636293703758357720,FeatureID:"636293703758357720",Feature: "Replication", MoSCoW: "", Description: "Database replication is the frequent electronic copying data from a database in one computer or server to a database in another so that all users share the same level of information. The result is a distributed database in which users can access data relevant to their tasks without interfering with the work of others.", FeatureDataType: "Collection", FeatureCategory: "Replication", FeatureParent: "NULL", FeatureSupportedAlternatives: "40", FeatureCriterionValue: "", _children: [{id: 636293703788516070,FeatureID:"636293703788516070",Feature: "Merge Replication", MoSCoW: "", Description: "Merge replication, like transactional replication, typically starts with a snapshot of the publication database objects and data. Subsequent data changes and schema modifications made at the Publisher and Subscribers are tracked with triggers. The Subscriber synchronizes with the Publisher when connected to the network and exchanges all rows that have changed between the Publisher and Subscriber since the last time synchronization occurred.", FeatureDataType: "Boolean", FeatureCategory: "Replication", FeatureParent: "Replication", FeatureSupportedAlternatives: "21", FeatureCriterionValue: "" },{id: 636293703783785158,FeatureID:"636293703783785158",Feature: "Transactional Replication", MoSCoW: "", Description: "Transactional replication typically starts with a snapshot of the publication database objects and data. As soon as the initial snapshot is taken, subsequent data changes and schema modifications made at the Publisher are usually delivered to the Subscriber as they occur (in near real time).", FeatureDataType: "Boolean", FeatureCategory: "Replication", FeatureParent: "Replication", FeatureSupportedAlternatives: "20", FeatureCriterionValue: "" },{id: 636293703771388164,FeatureID:"636293703771388164",Feature: "Snapshot Replication", MoSCoW: "", Description: "Snapshot replication refers to a replication method between databases. During this process, data is infrequently updated at specified times by copying data changes from the original database (publisher) to a receiving database (subscriber).", FeatureDataType: "Boolean", FeatureCategory: "Replication", FeatureParent: "Replication", FeatureSupportedAlternatives: "40", FeatureCriterionValue: "" },{id: 636182151334936721,FeatureID:"636182151334936721",Feature: "Horizontal partitioning (Sharding)", MoSCoW: "", Description: "A database shard is a horizontal partition of data in a database. Each individual partition is referred to as a shard or database shard. Each shard is held on a separate database server instance, to spread load.", FeatureDataType: "Boolean", FeatureCategory: "Partitioning", FeatureParent: "Replication", FeatureSupportedAlternatives: "40", FeatureCriterionValue: "" },]},] },{id: 3, FeatureID:"",Feature: "Partitioning", MoSCoW: "", Description: "", FeatureDataType: "Category", FeatureCategory: "", FeatureParent: "", FeatureSupportedAlternatives: "", FeatureCriterionValue: "", _children: [{id: 636293703620112965,FeatureID:"636293703620112965",Feature: "Partitioning method", MoSCoW: "", Description: "Partitioning is the database process where very large tables are divided into multiple smaller parts. By splitting a large table into smaller, individual tables, queries that access only a fraction of the data can run faster because there is less data to scan.", FeatureDataType: "Collection", FeatureCategory: "Partitioning", FeatureParent: "NULL", FeatureSupportedAlternatives: "43", FeatureCriterionValue: "", _children: [{id: 636182151339312058,FeatureID:"636182151339312058",Feature: "Interval Reference Partitioning", MoSCoW: "", Description: "This feature enables reference-partitioned table to use interval partitioning as a top partitioning strategy, which provides a better partitioning modeling. Interval partitioned tables can be used as parent tables for reference partitioning. ", FeatureDataType: "Boolean", FeatureCategory: "Partitioning", FeatureParent: "Partitioning method", FeatureSupportedAlternatives: "1", FeatureCriterionValue: "" },{id: 636182151338951642,FeatureID:"636182151338951642",Feature: "Interval Partitioning", MoSCoW: "", Description: "Interval partitioning is an extension of range partitioning, where the system is able to create new partitions as they are required. The PARTITION BY RANGE clause is used in the normal way to identify the transition point for the partition, then the new INTERVALclause used to calculate the range for new partitions when the values go beyond the existing transition point.", FeatureDataType: "Boolean", FeatureCategory: "Partitioning", FeatureParent: "Partitioning method", FeatureSupportedAlternatives: "2", FeatureCriterionValue: "" },{id: 636182151338695684,FeatureID:"636182151338695684",Feature: "Reference Partitioning", MoSCoW: "", Description: "Reference partitioning enables the partitioning of two tables that are related to one another by referential constraints. The partitioning key is resolved through an existing parent-child relationship, enforced by enabled and active primary key and foreign key constraints.", FeatureDataType: "Boolean", FeatureCategory: "Partitioning", FeatureParent: "Partitioning method", FeatureSupportedAlternatives: "1", FeatureCriterionValue: "" },{id: 636182151334058656,FeatureID:"636182151334058656",Feature: "List Partitioning", MoSCoW: "", Description: "In list partitioning, each partition is defined and selected based on the membership of a column value in one of a set of value lists, rather than in one of a set of contiguous ranges of values.", FeatureDataType: "Boolean", FeatureCategory: "Partitioning", FeatureParent: "Partitioning method", FeatureSupportedAlternatives: "12", FeatureCriterionValue: "" },{id: 636182151333456848,FeatureID:"636182151333456848",Feature: "Composite partitioning", MoSCoW: "", Description: "Composite partitioning is a combination of the basic data distribution methods; a table is partitioned by one data distribution method and then each partition is further subdivided into subpartitions using a second data distribution method. All subpartitions for a given partition represent a logical subset of the data.", FeatureDataType: "Boolean", FeatureCategory: "Partitioning", FeatureParent: "Partitioning method", FeatureSupportedAlternatives: "7", FeatureCriterionValue: "" },{id: 636182151331696781,FeatureID:"636182151331696781",Feature: "Hash Partitioning", MoSCoW: "", Description: "Hash partitioning is a partitioning technique where a hash key is used to distribute rows evenly across the different partitions (sub-tables). ", FeatureDataType: "Boolean", FeatureCategory: "Partitioning", FeatureParent: "Partitioning method", FeatureSupportedAlternatives: "22", FeatureCriterionValue: "" },{id: 636182151329808430,FeatureID:"636182151329808430",Feature: "Range Partitioning", MoSCoW: "", Description: "Range partitioning is a partitioning technique where ranges of data is stored separately in different sub-tables. MAXVALUE is provided as a catch-all for values that exceed all ranges specified.", FeatureDataType: "Boolean", FeatureCategory: "Partitioning", FeatureParent: "Partitioning method", FeatureSupportedAlternatives: "23", FeatureCriterionValue: "" },]},] },{id: 4, FeatureID:"",Feature: "Transaction/Consistency", MoSCoW: "", Description: "", FeatureDataType: "Category", FeatureCategory: "", FeatureParent: "", FeatureSupportedAlternatives: "", FeatureCriterionValue: "", _children: [{id: 636253637127312179,FeatureID:"636253637127312179",Feature: "Transaction/Consistency", MoSCoW: "", Description: "Consistency in database systems refers to the requirement that any given database transaction must change affected data only in allowed ways. Any data written to the database must be valid according to all defined rules, including constraints, cascades, triggers, and any combination thereof.", FeatureDataType: "Collection", FeatureCategory: "Transaction/Consistency", FeatureParent: "NULL", FeatureSupportedAlternatives: "72", FeatureCriterionValue: "", _children: [{id: 636182151305851724,FeatureID:"636182151305851724",Feature: "BASE (Eventual Consistency)", MoSCoW: "", Description: "Eventually consistent services are often classified as providing BASE (Basically Available, Soft state, Eventual consistency) semantics, in contrast to traditional ACID (Atomicity, Consistency, Isolation, Durability) guarantees.", FeatureDataType: "Boolean", FeatureCategory: "Transaction/Consistency", FeatureParent: "Transaction/Consistency", FeatureSupportedAlternatives: "27", FeatureCriterionValue: "" },{id: 636182151303808089,FeatureID:"636182151303808089",Feature: "ACID (Immediate Consistency)", MoSCoW: "", Description: "ACID (Atomicity, Consistency, Isolation, Durability) is a set of properties of database transactions.", FeatureDataType: "Boolean", FeatureCategory: "Transaction/Consistency", FeatureParent: "Transaction/Consistency", FeatureSupportedAlternatives: "56", FeatureCriterionValue: "" },]},] },{id: 5, FeatureID:"",Feature: "Database Operations", MoSCoW: "", Description: "", FeatureDataType: "Category", FeatureCategory: "", FeatureParent: "", FeatureSupportedAlternatives: "", FeatureCriterionValue: "", _children: [{id: 636253348844443797,FeatureID:"636253348844443797",Feature: "Database Operations", MoSCoW: "", Description: "The simple operations related to a DBMS, such as modifying a database, etc.", FeatureDataType: "Collection", FeatureCategory: "Database Operations", FeatureParent: "NULL", FeatureSupportedAlternatives: "72", FeatureCriterionValue: "", _children: [{id: 636253348832873203,FeatureID:"636253348832873203",Feature: "Add table column at specific position", MoSCoW: "", Description: "Add a column at specific position in a table.", FeatureDataType: "Boolean", FeatureCategory: "Database Operations", FeatureParent: "Database Operations", FeatureSupportedAlternatives: "6", FeatureCriterionValue: "" },{id: 636182151455205366,FeatureID:"636182151455205366",Feature: "Create a User-Defined Data Type Alias", MoSCoW: "", Description: "Create a User-Defined Data Type Alias", FeatureDataType: "Boolean", FeatureCategory: "Database Operations", FeatureParent: "Database Operations", FeatureSupportedAlternatives: "30", FeatureCriterionValue: "" },{id: 636182151447550662,FeatureID:"636182151447550662",Feature: "View or Change the Properties of a Database", MoSCoW: "", Description: "View or Change the Properties of a Database", FeatureDataType: "Boolean", FeatureCategory: "Database Operations", FeatureParent: "Database Operations", FeatureSupportedAlternatives: "69", FeatureCriterionValue: "" },{id: 636182151444504326,FeatureID:"636182151444504326",Feature: "Shrink a File", MoSCoW: "", Description: "Shrinking data files recovers space by moving pages of data from the end of the file to unoccupied space closer to the front of the file. ", FeatureDataType: "Boolean", FeatureCategory: "Database Operations", FeatureParent: "Database Operations", FeatureSupportedAlternatives: "35", FeatureCriterionValue: "" },{id: 636182151434485070,FeatureID:"636182151434485070",Feature: "Shrink a Database", MoSCoW: "", Description: "Shrink a Database", FeatureDataType: "Boolean", FeatureCategory: "Database Operations", FeatureParent: "Database Operations", FeatureSupportedAlternatives: "72", FeatureCriterionValue: "" },{id: 636182151427898391,FeatureID:"636182151427898391",Feature: "Rename a Database", MoSCoW: "", Description: "Rename a Database", FeatureDataType: "Boolean", FeatureCategory: "Database Operations", FeatureParent: "Database Operations", FeatureSupportedAlternatives: "59", FeatureCriterionValue: "" },{id: 636182151425022390,FeatureID:"636182151425022390",Feature: "Set a Database to Single-user Mode", MoSCoW: "", Description: "Set a Database to Single-user Mode", FeatureDataType: "Boolean", FeatureCategory: "Database Operations", FeatureParent: "Database Operations", FeatureSupportedAlternatives: "41", FeatureCriterionValue: "" },{id: 636182151418614145,FeatureID:"636182151418614145",Feature: "Increase the Size of a Database", MoSCoW: "", Description: "Increase the Size of a Database", FeatureDataType: "Boolean", FeatureCategory: "Database Operations", FeatureParent: "Database Operations", FeatureSupportedAlternatives: "72", FeatureCriterionValue: "" },{id: 636182151413562703,FeatureID:"636182151413562703",Feature: "Display Data and Log Space Information for a DB", MoSCoW: "", Description: "Display Data and Log Space Information for a Database", FeatureDataType: "Boolean", FeatureCategory: "Database Operations", FeatureParent: "Database Operations", FeatureSupportedAlternatives: "45", FeatureCriterionValue: "" },{id: 636182151409275939,FeatureID:"636182151409275939",Feature: "Delete Data or Log Files from a Database", MoSCoW: "", Description: "Delete Data or Log Files from a Database", FeatureDataType: "Boolean", FeatureCategory: "Database Operations", FeatureParent: "Database Operations", FeatureSupportedAlternatives: "69", FeatureCriterionValue: "" },{id: 636182151405992139,FeatureID:"636182151405992139",Feature: "Create/Delete/Modify a Database", MoSCoW: "", Description: "Create/Delete/Modify a Database", FeatureDataType: "Boolean", FeatureCategory: "Database Operations", FeatureParent: "Database Operations", FeatureSupportedAlternatives: "69", FeatureCriterionValue: "" },]},] },{id: 6, FeatureID:"",Feature: "Recovery", MoSCoW: "", Description: "", FeatureDataType: "Category", FeatureCategory: "", FeatureParent: "", FeatureSupportedAlternatives: "", FeatureCriterionValue: "", _children: [{id: 636253348844311667,FeatureID:"636253348844311667",Feature: "Recovery", MoSCoW: "", Description: "The recovery system ensures the database contains exactly those updates produced by committed transactions.", FeatureDataType: "Collection", FeatureCategory: "Recovery", FeatureParent: "NULL", FeatureSupportedAlternatives: "67", FeatureCriterionValue: "", _children: [{id: 636182151404469717,FeatureID:"636182151404469717",Feature: "Instance Recovery", MoSCoW: "", Description: "When instance fails before committed data are written into data files, the DBMS uses the data recorded in the online redo log files to recover the lost data when the associated database is re-started. This process is called Roll forward or cache recovery.", FeatureDataType: "Boolean", FeatureCategory: "Recovery", FeatureParent: "Recovery", FeatureSupportedAlternatives: "21", FeatureCriterionValue: "" },{id: 636182151396974375,FeatureID:"636182151396974375",Feature: "Complete Recovery", MoSCoW: "", Description: "Recover the whole database, a tablespace, or a datafile.", FeatureDataType: "Boolean", FeatureCategory: "Recovery", FeatureParent: "Recovery", FeatureSupportedAlternatives: "67", FeatureCriterionValue: "" },{id: 636182151395085424,FeatureID:"636182151395085424",Feature: "Crash Recovery", MoSCoW: "", Description: "Crash recovery is the process by which the database is moved back to a consistent and usable state. This is done by rolling back incomplete transactions and completing committed transactions that were still in memory when the crashoccurred ", FeatureDataType: "Boolean", FeatureCategory: "Recovery", FeatureParent: "Recovery", FeatureSupportedAlternatives: "44", FeatureCriterionValue: "" },{id: 636182151394368095,FeatureID:"636182151394368095",Feature: "Media Recovery", MoSCoW: "", Description: "Datafile media recovery is sometimes alse called media recovery. Datafile media recovery is used to recover from a damaged (or lost) datafile, control file or spfile. The goal of datafile media recovery is to restore database integrity.", FeatureDataType: "Boolean", FeatureCategory: "Recovery", FeatureParent: "Recovery", FeatureSupportedAlternatives: "19", FeatureCriterionValue: "" },]},] },{id: 7, FeatureID:"",Feature: "Backup", MoSCoW: "", Description: "", FeatureDataType: "Category", FeatureCategory: "", FeatureParent: "", FeatureSupportedAlternatives: "", FeatureCriterionValue: "", _children: [{id: 636253348844183845,FeatureID:"636253348844183845",Feature: "Backup", MoSCoW: "", Description: "A backup is a copy of data from your database that can be used to reconstruct that data. Backups can be divided into physical backups and logical backups. Physical backups are backups of the physical files used in storing and recovering your database, such as datafiles, control files, and archived redo logs.", FeatureDataType: "Collection", FeatureCategory: "Backup", FeatureParent: "NULL", FeatureSupportedAlternatives: "67", FeatureCriterionValue: "", _children: [{id: 636182151393568341,FeatureID:"636182151393568341",Feature: "Corrupt block detection at backup", MoSCoW: "", Description: "A detected corrupt block (for example, through a user&quot;s SQL query) is now automatically repaired by using a good block from a physical standby database. ", FeatureDataType: "Boolean", FeatureCategory: "Backup", FeatureParent: "Backup", FeatureSupportedAlternatives: "26", FeatureCriterionValue: "" },{id: 636182151392325317,FeatureID:"636182151392325317",Feature: "Incremental backups", MoSCoW: "", Description: "An incremental backup is one that provides a backup of files that have changed or are new since the last incremental backup; it is one that backs up only the data that have changed since the last backup — be it a full or incremental backup.", FeatureDataType: "Boolean", FeatureCategory: "Backup", FeatureParent: "Backup", FeatureSupportedAlternatives: "38", FeatureCriterionValue: "" },{id: 636182151392204809,FeatureID:"636182151392204809",Feature: "Open database backups", MoSCoW: "", Description: "the backups are done while the database is opend. (incosistent backup)", FeatureDataType: "Boolean", FeatureCategory: "Backup", FeatureParent: "Backup", FeatureSupportedAlternatives: "12", FeatureCriterionValue: "" },{id: 636182151389475864,FeatureID:"636182151389475864",Feature: "Closed database backups", MoSCoW: "", Description: "When using operating system utilities for closed backups, the backups are done while the database is closed. ", FeatureDataType: "Boolean", FeatureCategory: "Backup", FeatureParent: "Backup", FeatureSupportedAlternatives: "67", FeatureCriterionValue: "" },]},] },{id: 8, FeatureID:"",Feature: "Encryption", MoSCoW: "", Description: "", FeatureDataType: "Category", FeatureCategory: "", FeatureParent: "", FeatureSupportedAlternatives: "", FeatureCriterionValue: "", _children: [{id: 636253348843883381,FeatureID:"636253348843883381",Feature: "Encryption", MoSCoW: "", Description: "Data encryption translates data into another form, or code, so that only people with access to a secret key (formally called a decryption key) or password can read it. Encrypted data is commonly referred to as ciphertext, while unencrypted data is called plaintext.", FeatureDataType: "Collection", FeatureCategory: "Encryption", FeatureParent: "NULL", FeatureSupportedAlternatives: "64", FeatureCriterionValue: "", _children: [{id: 636182151388913080,FeatureID:"636182151388913080",Feature: "Encrypting File System (EFS)", MoSCoW: "", Description: "The Encrypting File System (EFS) on Microsoft Windows is a feature introduced in version 3.0 of NTFS that provides filesystem-level encryption. The technology enables files to be transparently encrypted to protect confidential data from attackers with physical access to the computer.", FeatureDataType: "Boolean", FeatureCategory: "Encryption", FeatureParent: "Encryption", FeatureSupportedAlternatives: "18", FeatureCriterionValue: "" },{id: 636182151386235328,FeatureID:"636182151386235328",Feature: "Field-Level Encryption", MoSCoW: "", Description: "All values in a field of an entity are encrypted with the same password (word or phrase), the same encryption algorithm, and the same cipher mode.", FeatureDataType: "Boolean", FeatureCategory: "Encryption", FeatureParent: "Encryption", FeatureSupportedAlternatives: "47", FeatureCriterionValue: "" },{id: 636182151385072831,FeatureID:"636182151385072831",Feature: "Transparent Data Encryption", MoSCoW: "", Description: "Data-in-motion is encrypted usually using TLS/SSL protocol, so the data is encrypted while is transferred from client to the cloud and is not anymore vulnerable to eavesdropping and tampering, but once it arrives on server, data is decrypted and processed by the database service and then stored.", FeatureDataType: "Boolean", FeatureCategory: "Encryption", FeatureParent: "Encryption", FeatureSupportedAlternatives: "11", FeatureCriterionValue: "" },{id: 636182151379301120,FeatureID:"636182151379301120",Feature: "Encrypt Data in Transit/Motion", MoSCoW: "", Description: "Data-in-motion is encrypted usually using TLS/SSL protocol, so the data is encrypted while is transferred from client to the cloud and is not anymore vulnerable to eavesdropping and tampering, but once it arrives on server, data is decrypted and processed by the database service and then stored.", FeatureDataType: "Boolean", FeatureCategory: "Encryption", FeatureParent: "Encryption", FeatureSupportedAlternatives: "45", FeatureCriterionValue: "" },{id: 636182151378180323,FeatureID:"636182151378180323",Feature: "Native network encryption", MoSCoW: "", Description: "Native network encryption is the ability to encrypt database connections, without the configuration overhead of TCP/IP and SSL/TLS and without the need to open and listen on different ports.", FeatureDataType: "Boolean", FeatureCategory: "Encryption", FeatureParent: "Encryption", FeatureSupportedAlternatives: "15", FeatureCriterionValue: "" },]},] },{id: 9, FeatureID:"",Feature: "Data storage model", MoSCoW: "", Description: "", FeatureDataType: "Category", FeatureCategory: "", FeatureParent: "", FeatureSupportedAlternatives: "", FeatureCriterionValue: "", _children: [{id: 636253348843679526,FeatureID:"636253348843679526",Feature: "Data storage model", MoSCoW: "", Description: "Data Models are fundamental entities to introduce abstraction in a DBMS. Data models define how data is connected to each other and how they are processed and stored inside the system. The very first data model could be flat data-models, where all the data used are to be kept in the same plane.", FeatureDataType: "Collection", FeatureCategory: "Data storage model", FeatureParent: "NULL", FeatureSupportedAlternatives: "73", FeatureCriterionValue: "", _children: [{id: 636182151723492632,FeatureID:"636182151723492632",Feature: "Content store", MoSCoW: "", Description: "The content store is optionally used to store large binary values. Normally all node and property data is stored in a persistence manager, but for large binaries such as files special treatment can improve performance and reduce disk usage.", FeatureDataType: "Boolean", FeatureCategory: "Data storage model", FeatureParent: "Data storage model", FeatureSupportedAlternatives: "4", FeatureCriterionValue: "" },{id: 636182151722605819,FeatureID:"636182151722605819",Feature: "Wide column", MoSCoW: "", Description: "A wide column store is a type of key-value database. It uses tables, rows, and columns, but unlike a relational database, the names and format of the columns can vary from row to row in the same table.", FeatureDataType: "Boolean", FeatureCategory: "Data storage model", FeatureParent: "Data storage model", FeatureSupportedAlternatives: "4", FeatureCriterionValue: "" },{id: 636182151721688195,FeatureID:"636182151721688195",Feature: "Native XML", MoSCoW: "", Description: "An XML database is a data persistence software system that allows data to be specified, and sometimes stored, in XML format. These data can be queried, transformed, exported and returned to a calling system. XML databases are a flavor of document-oriented databases.", FeatureDataType: "Boolean", FeatureCategory: "Data storage model", FeatureParent: "Data storage model", FeatureSupportedAlternatives: "6", FeatureCriterionValue: "" },{id: 636182151720846778,FeatureID:"636182151720846778",Feature: "Multi-value", MoSCoW: "", Description: "These databases differ from a relational database in that they have features that support and encourage the use of attributes which can take a list of values, rather than all attributes being single-valued. ", FeatureDataType: "Boolean", FeatureCategory: "Data storage model", FeatureParent: "Data storage model", FeatureSupportedAlternatives: "5", FeatureCriterionValue: "" },{id: 636182151720483069,FeatureID:"636182151720483069",Feature: "Object oriented", MoSCoW: "", Description: "An object database (OODBMS) allows object-oriented programmers to develop the product, store them as objects, and replicate or modify existing objects to make new objects within the OODBMS. Because the database is integrated with the programming language, the programmer can maintain consistency within one environment, in that both the OODBMS and the programming language will use the same model of representation. Relational DBMS projects, by way of contrast, maintain a clearer division between the database model and the application.", FeatureDataType: "Boolean", FeatureCategory: "Data storage model", FeatureParent: "Data storage model", FeatureSupportedAlternatives: "4", FeatureCriterionValue: "" },{id: 636182151720206721,FeatureID:"636182151720206721",Feature: "Event Stores", MoSCoW: "", Description: "Event sourcing is a way of persisting of an application&quot;s state by storing the history that determines the current state of the application. This model stores all the changes (events) to the system, rather than just its current state, and returns the stream of events associated with an aggregate instance so that one can replay the events to recreate the state of the aggregate.", FeatureDataType: "Boolean", FeatureCategory: "Data storage model", FeatureParent: "Data storage model", FeatureSupportedAlternatives: "4", FeatureCriterionValue: "" },{id: 636182151718924320,FeatureID:"636182151718924320",Feature: "Document", MoSCoW: "", Description: "Document-oriented databases are inherently a subclass of the key-value store. The central concept of a document-oriented database is the notion of a document. While each document-oriented database implementation differs on the details of this definition, in general, they all assume documents encapsulate and encode data (or information) in some standard formats or encodings. Encodings in use include XML, YAML, JSON, and BSON, as well as binary forms like PDF and Microsoft Office documents (MS Word, Excel, and so on).", FeatureDataType: "Boolean", FeatureCategory: "Data storage model", FeatureParent: "Data storage model", FeatureSupportedAlternatives: "16", FeatureCriterionValue: "" },{id: 636182151718163377,FeatureID:"636182151718163377",Feature: "Key-value", MoSCoW: "", Description: "A key-value store, or key-value database, is a data storage model designed for storing, retrieving, and managing associative arrays, a data structure more commonly known today as a dictionary or hash. Dictionaries contain a collection of objects, or records, which in turn have many different fields within them, each containing data. These records are stored and retrieved using a key that uniquely identifies the record, and is used to quickly find the data within the database.", FeatureDataType: "Boolean", FeatureCategory: "Data storage model", FeatureParent: "Data storage model", FeatureSupportedAlternatives: "11", FeatureCriterionValue: "" },{id: 636182151716881033,FeatureID:"636182151716881033",Feature: "Relational", MoSCoW: "", Description: "This model organizes data into one or more tables (or relations) of columns and rows, with a unique key identifying each row. Rows are also called records or tuples. Generally, each table/relation represents one entity type.  The rows represent instances of that type of entity and the columns representing values attributed to that instance.", FeatureDataType: "Boolean", FeatureCategory: "Data storage model", FeatureParent: "Data storage model", FeatureSupportedAlternatives: "29", FeatureCriterionValue: "" },]},] },{id: 10, FeatureID:"",Feature: "Temporary Tables", MoSCoW: "", Description: "", FeatureDataType: "Category", FeatureCategory: "", FeatureParent: "", FeatureSupportedAlternatives: "", FeatureCriterionValue: "", _children: [{id: 636253348843448896,FeatureID:"636253348843448896",Feature: "Temporary Tables", MoSCoW: "", Description: "SQL Server provides the concept of temporary table which helps the developer in a great way. These tables can be created at runtime and can do the all kinds of operations that one normal table can do. But, based on the table types, the scope is limited. These tables are created inside tempdb database.", FeatureDataType: "Collection", FeatureCategory: "Temporary Tables", FeatureParent: "NULL", FeatureSupportedAlternatives: "29", FeatureCriterionValue: "", _children: [{id: 636182151659396478,FeatureID:"636182151659396478",Feature: "Use a temporary table twice in a single query", MoSCoW: "", Description: "Use a temporary table twice in a single query", FeatureDataType: "Boolean", FeatureCategory: "Temporary Tables", FeatureParent: "Temporary Tables", FeatureSupportedAlternatives: "25", FeatureCriterionValue: "" },{id: 636182151656711639,FeatureID:"636182151656711639",Feature: "Session local temporary tables", MoSCoW: "", Description: "Temporary tables that are automatically dropped at the end of the transaction or when the session is disconnected ", FeatureDataType: "Boolean", FeatureCategory: "Temporary Tables", FeatureParent: "Temporary Tables", FeatureSupportedAlternatives: "19", FeatureCriterionValue: "" },{id: 636182151655629695,FeatureID:"636182151655629695",Feature: "Global temporary tables", MoSCoW: "", Description: "Temporary tables that are always visible, but the data is session specific ", FeatureDataType: "Boolean", FeatureCategory: "Temporary Tables", FeatureParent: "Temporary Tables", FeatureSupportedAlternatives: "7", FeatureCriterionValue: "" },{id: 636182151654231822,FeatureID:"636182151654231822",Feature: "Permanent global temporary tables", MoSCoW: "", Description: "Tmporary tables that are created once and that need to be dropped manualy (their definition is retained across server restarts) ", FeatureDataType: "Boolean", FeatureCategory: "Temporary Tables", FeatureParent: "Temporary Tables", FeatureSupportedAlternatives: "11", FeatureCriterionValue: "" },{id: 636182151626062754,FeatureID:"636182151626062754",Feature: "Functions as column default", MoSCoW: "", Description: "Use any function (including user defined functions) as the default for a column ", FeatureDataType: "Boolean", FeatureCategory: "Temporary Tables", FeatureParent: "Temporary Tables", FeatureSupportedAlternatives: "15", FeatureCriterionValue: "" },]},] },{id: 11, FeatureID:"",Feature: "Views", MoSCoW: "", Description: "", FeatureDataType: "Category", FeatureCategory: "", FeatureParent: "", FeatureSupportedAlternatives: "", FeatureCriterionValue: "", _children: [{id: 636253348842791679,FeatureID:"636253348842791679",Feature: "Views", MoSCoW: "", Description: "A database view is a searchable object in a database that is defined by a query. Though a view doesn&quot;t store data, some refer to a views as “virtual tables,” you can query a view like you can a table. A view can combine data from two or more table, using joins, and also just contain a subset of information.", FeatureDataType: "Collection", FeatureCategory: "Views", FeatureParent: "NULL", FeatureSupportedAlternatives: "29", FeatureCriterionValue: "", _children: [{id: 636182151668456675,FeatureID:"636182151668456675",Feature: "Views with derived tables", MoSCoW: "", Description: "Create a view that uses a derived table ", FeatureDataType: "Boolean", FeatureCategory: "Views", FeatureParent: "Views", FeatureSupportedAlternatives: "26", FeatureCriterionValue: "" },{id: 636182151665930295,FeatureID:"636182151665930295",Feature: "Triggers on views", MoSCoW: "", Description: "On views, triggers can be defined to execute instead of INSERT, UPDATE, or DELETE operations. INSTEAD OF triggers are fired once for each row that needs to be modified in the view. It is the responsibility of the trigger&quot;s function to perform the necessary modifications to the underlying base tables and, where appropriate, return the modified row as it will appear in the view. Triggers on views can also be defined to execute once per SQL statement, before or after INSERT, UPDATE, or DELETE operations.", FeatureDataType: "Boolean", FeatureCategory: "Views", FeatureParent: "Views", FeatureSupportedAlternatives: "23", FeatureCriterionValue: "" },{id: 636182151664307365,FeatureID:"636182151664307365",Feature: "WITH CHECK OPTION", MoSCoW: "", Description: "Create updateable views where only rows can be updated/deleted/inserted that match the WHERE clause of the view", FeatureDataType: "Boolean", FeatureCategory: "Views", FeatureParent: "Views", FeatureSupportedAlternatives: "23", FeatureCriterionValue: "" },{id: 636182151662403737,FeatureID:"636182151662403737",Feature: "Updateable Views", MoSCoW: "", Description: "Some views are updatable and references to them can be used to specify tables to be updated in data change statements. That is, you can use them in statements such as UPDATE, DELETE, or INSERT to update the contents of the underlying table. Derived tables can also be specified in multiple-table UPDATE and DELETE statements, but can only be used for reading data to specify rows to be updated or deleted. Generally, the view references must be updatable, meaning that they may be merged and not materialized. Composite views have more complex rules.", FeatureDataType: "Boolean", FeatureCategory: "Views", FeatureParent: "Views", FeatureSupportedAlternatives: "23", FeatureCriterionValue: "" },{id: 636182151653147810,FeatureID:"636182151653147810",Feature: "Automatically updated MVIEWS", MoSCoW: "", Description: "MVIEW is automatically updated when the underlying tables are changed ", FeatureDataType: "Boolean", FeatureCategory: "Views", FeatureParent: "Views", FeatureSupportedAlternatives: "14", FeatureCriterionValue: "" },{id: 636182151652386788,FeatureID:"636182151652386788",Feature: "MVIEW with query rewrite", MoSCoW: "", Description: "If applicable can the optimizer detect that a query against the base tables can be done using the materialized view ", FeatureDataType: "Boolean", FeatureCategory: "Views", FeatureParent: "Views", FeatureSupportedAlternatives: "8", FeatureCriterionValue: "" },{id: 636182151651023441,FeatureID:"636182151651023441",Feature: "Materialized views", MoSCoW: "", Description: "Persist the result of a query as a table ", FeatureDataType: "Boolean", FeatureCategory: "Views", FeatureParent: "Views", FeatureSupportedAlternatives: "14", FeatureCriterionValue: "" },]},] },{id: 12, FeatureID:"",Feature: "Scalability", MoSCoW: "", Description: "", FeatureDataType: "Category", FeatureCategory: "", FeatureParent: "", FeatureSupportedAlternatives: "", FeatureCriterionValue: "", _children: [{id: 636253348842163329,FeatureID:"636253348842163329",Feature: "Scalability", MoSCoW: "", Description: "Scalability is a characteristic of a system, model or function that describes its capability to cope and perform under an increased or expanding workload. A system that scales well will be able to maintain or even increase its level of performance or efficiency when tested by larger operational demands.", FeatureDataType: "Collection", FeatureCategory: "Scalability", FeatureParent: "NULL", FeatureSupportedAlternatives: "72", FeatureCriterionValue: "", _children: [{id: 636182151372047263,FeatureID:"636182151372047263",Feature: "Horizontal Scalability (Scale out/in)", MoSCoW: "", Description: "To scale vertically (or scale up/down) means to add resources to (or remove resources from) a single node in a DBMS", FeatureDataType: "Boolean", FeatureCategory: "Scalability", FeatureParent: "Scalability", FeatureSupportedAlternatives: "53", FeatureCriterionValue: "" },{id: 636182151368325280,FeatureID:"636182151368325280",Feature: "Vertical scalability (Scale up/down)", MoSCoW: "", Description: "To scale horizontally (or scale out/in) means to add more nodes to (or remove nodes from) a DBMS", FeatureDataType: "Boolean", FeatureCategory: "Scalability", FeatureParent: "Scalability", FeatureSupportedAlternatives: "61", FeatureCriterionValue: "" },]},] },{id: 13, FeatureID:"",Feature: "Password Management", MoSCoW: "", Description: "", FeatureDataType: "Category", FeatureCategory: "", FeatureParent: "", FeatureSupportedAlternatives: "", FeatureCriterionValue: "", _children: [{id: 636253348841546412,FeatureID:"636253348841546412",Feature: "Password Management", MoSCoW: "", Description: "It helps a user store and organize passwords.", FeatureDataType: "Collection", FeatureCategory: "Password Management", FeatureParent: "NULL", FeatureSupportedAlternatives: "73", FeatureCriterionValue: "", _children: [{id: 636182151350093998,FeatureID:"636182151350093998",Feature: "Password Complexity Verification", MoSCoW: "", Description: "Database checks that new or changed passwords are sufficiently complex to prevent intruders who try to break into the system by guessing passwords.", FeatureDataType: "Boolean", FeatureCategory: "Password Management", FeatureParent: "Password Management", FeatureSupportedAlternatives: "73", FeatureCriterionValue: "" },{id: 636182151349327097,FeatureID:"636182151349327097",Feature: "Password History", MoSCoW: "", Description: "The Enforce password history policy setting determines the number of unique new passwords that must be associated with a user account before an old password can be reused.", FeatureDataType: "Boolean", FeatureCategory: "Password Management", FeatureParent: "Password Management", FeatureSupportedAlternatives: "26", FeatureCriterionValue: "" },{id: 636182151347567656,FeatureID:"636182151347567656",Feature: "Password Lifetime and Expiration", MoSCoW: "", Description: "Specify a maximum lifetime for passwords. When the specified amount of time passes and the password expires, the user or DBA must change the password. ", FeatureDataType: "Boolean", FeatureCategory: "Password Management", FeatureParent: "Password Management", FeatureSupportedAlternatives: "27", FeatureCriterionValue: "" },{id: 636182151346365193,FeatureID:"636182151346365193",Feature: "Account Locking", MoSCoW: "", Description: "locking out an account due to prevent security threat (multiple password failure)", FeatureDataType: "Boolean", FeatureCategory: "Password Management", FeatureParent: "Password Management", FeatureSupportedAlternatives: "24", FeatureCriterionValue: "" },]},] },{id: 14, FeatureID:"",Feature: "Auditing", MoSCoW: "", Description: "", FeatureDataType: "Category", FeatureCategory: "", FeatureParent: "", FeatureSupportedAlternatives: "", FeatureCriterionValue: "", _children: [{id: 636253348841160385,FeatureID:"636253348841160385",Feature: "Auditing", MoSCoW: "", Description: "Database auditing involves observing a database so as to be aware of the actions of database users. Database administrators and consultants often set up auditing for security purposes, for example, to ensure that those without the permission to access information do not access it.", FeatureDataType: "Collection", FeatureCategory: "Auditing", FeatureParent: "NULL", FeatureSupportedAlternatives: "37", FeatureCriterionValue: "", _children: [{id: 636182151344602558,FeatureID:"636182151344602558",Feature: "Fine-Grained Auditing", MoSCoW: "", Description: "Audits, at the most granular level, data access and actions based on content, using any boolean measure, such as value > 1,000,000. Enables auditing based on access to or changes in a column.", FeatureDataType: "Boolean", FeatureCategory: "Auditing", FeatureParent: "Auditing", FeatureSupportedAlternatives: "21", FeatureCriterionValue: "" },{id: 636182151343640134,FeatureID:"636182151343640134",Feature: "Schema Object Auditing", MoSCoW: "", Description: "Audits specific statements on a particular schema object. Schema object auditing is very focused, auditing only a single specified type of statement (such as SELECT) on a specified schema object. ", FeatureDataType: "Boolean", FeatureCategory: "Auditing", FeatureParent: "Auditing", FeatureSupportedAlternatives: "17", FeatureCriterionValue: "" },{id: 636182151342077367,FeatureID:"636182151342077367",Feature: "Privilege Auditing", MoSCoW: "", Description: "Audits the use of system privileges that enable corresponding actions. Privilege auditing is more focused than statement auditing, which audits only a particular type of action. ", FeatureDataType: "Boolean", FeatureCategory: "Auditing", FeatureParent: "Auditing", FeatureSupportedAlternatives: "23", FeatureCriterionValue: "" },{id: 636182151339552034,FeatureID:"636182151339552034",Feature: "Statement Auditing", MoSCoW: "", Description: "Statement auditing audits the use of several types of related actions for each option.", FeatureDataType: "Boolean", FeatureCategory: "Auditing", FeatureParent: "Auditing", FeatureSupportedAlternatives: "29", FeatureCriterionValue: "" },]},] },{id: 15, FeatureID:"",Feature: "Locking and Concurrency Control", MoSCoW: "", Description: "", FeatureDataType: "Category", FeatureCategory: "", FeatureParent: "", FeatureSupportedAlternatives: "", FeatureCriterionValue: "", _children: [{id: 636253348840720787,FeatureID:"636253348840720787",Feature: "Locking and Concurrency Control", MoSCoW: "", Description: "Concurrency control is a database management systems (DBMS) concept that is used to address conflicts with the simultaneous accessing or altering of data that can occur with a multi-user system.", FeatureDataType: "Collection", FeatureCategory: "Locking and Concurrency Control", FeatureParent: "NULL", FeatureSupportedAlternatives: "73", FeatureCriterionValue: "", _children: [{id: 636182151318154455,FeatureID:"636182151318154455",Feature: "Optimistic locking", MoSCoW: "", Description: "Optimistic Locking is a strategy where you read a record, take note of a version number and check that the version hasn&quot;t changed before you write the record back.", FeatureDataType: "Boolean", FeatureCategory: "Locking and Concurrency Control", FeatureParent: "Locking and Concurrency Control", FeatureSupportedAlternatives: "4", FeatureCriterionValue: "" },{id: 636182151316872209,FeatureID:"636182151316872209",Feature: "Multiversion concurrency control (MVCC)", MoSCoW: "", Description: "Each transaction maintains a private workspace for its accessed data, and its changed data become visible outside the transaction only upon its commit. This model provides a different concurrency control behavior with benefits in many cases.", FeatureDataType: "Boolean", FeatureCategory: "Locking and Concurrency Control", FeatureParent: "Locking and Concurrency Control", FeatureSupportedAlternatives: "26", FeatureCriterionValue: "" },{id: 636182151316310493,FeatureID:"636182151316310493",Feature: "Index concurrency control", MoSCoW: "", Description: "Synchronizing access operations to indexes, rather than to user data. Specialized methods provide substantial performance gains.", FeatureDataType: "Boolean", FeatureCategory: "Locking and Concurrency Control", FeatureParent: "Locking and Concurrency Control", FeatureSupportedAlternatives: "18", FeatureCriterionValue: "" },{id: 636182151315589253,FeatureID:"636182151315589253",Feature: "Commitment ordering ", MoSCoW: "", Description: "Controlling or checking transactions&quot; chronological order of commit events to be compatible with their respective precedence order.", FeatureDataType: "Boolean", FeatureCategory: "Locking and Concurrency Control", FeatureParent: "Locking and Concurrency Control", FeatureSupportedAlternatives: "22", FeatureCriterionValue: "" },{id: 636182151315308842,FeatureID:"636182151315308842",Feature: "Timestamp ordering", MoSCoW: "", Description: "Assigning timestamps to transactions, and controlling or checking access to data by timestamp order.", FeatureDataType: "Boolean", FeatureCategory: "Locking and Concurrency Control", FeatureParent: "Locking and Concurrency Control", FeatureSupportedAlternatives: "9", FeatureCriterionValue: "" },{id: 636182151313987138,FeatureID:"636182151313987138",Feature: "Serialization graph checking", MoSCoW: "", Description: "(also called Serializability, or Conflict, or Precedence graph checking) - Checking for cycles in the schedule&quot;s graph and breaking them by aborts.", FeatureDataType: "Boolean", FeatureCategory: "Locking and Concurrency Control", FeatureParent: "Locking and Concurrency Control", FeatureSupportedAlternatives: "27", FeatureCriterionValue: "" },{id: 636182151312901974,FeatureID:"636182151312901974",Feature: "Two-phase locking / commit", MoSCoW: "", Description: " Controlling access to data by locks assigned to the data. Access of a transaction to a data item (database object) locked by another transaction may be blocked (depending on lock type and access operation type) until lock release.", FeatureDataType: "Boolean", FeatureCategory: "Locking and Concurrency Control", FeatureParent: "Locking and Concurrency Control", FeatureSupportedAlternatives: "26", FeatureCriterionValue: "" },{id: 636182151307134144,FeatureID:"636182151307134144",Feature: "Concurrent manipulation of data", MoSCoW: "", Description: "Support multiple access", FeatureDataType: "Boolean", FeatureCategory: "Locking and Concurrency Control", FeatureParent: "Locking and Concurrency Control", FeatureSupportedAlternatives: "73", FeatureCriterionValue: "" },]},] },{id: 16, FeatureID:"",Feature: "NoSQL Features", MoSCoW: "", Description: "", FeatureDataType: "Category", FeatureCategory: "", FeatureParent: "", FeatureSupportedAlternatives: "", FeatureCriterionValue: "", _children: [{id: 636253348840357411,FeatureID:"636253348840357411",Feature: "NoSQL Features", MoSCoW: "", Description: "A NoSQL (originally referring to non SQL, non relational or not only SQL) database provides a mechanism for storage and retrieval of data which is modeled in means other than the tabular relations used in relational databases.", FeatureDataType: "Collection", FeatureCategory: "NoSQL Features", FeatureParent: "NULL", FeatureSupportedAlternatives: "63", FeatureCriterionValue: "", _children: [{id: 636182151302739916,FeatureID:"636182151302739916",Feature: "Indexes on JSON documents", MoSCoW: "", Description: "The DBMS supports Indexes on JSON documents", FeatureDataType: "Boolean", FeatureCategory: "NoSQL Features", FeatureParent: "NoSQL Features", FeatureSupportedAlternatives: "34", FeatureCriterionValue: "" },{id: 636182151301081388,FeatureID:"636182151301081388",Feature: "JSON", MoSCoW: "", Description: "The DBMS supports JSON API", FeatureDataType: "Boolean", FeatureCategory: "NoSQL Features", FeatureParent: "NoSQL Features", FeatureSupportedAlternatives: "47", FeatureCriterionValue: "" },{id: 636182151300199245,FeatureID:"636182151300199245",Feature: "XQuery", MoSCoW: "", Description: "The DBMS supports XQuery API", FeatureDataType: "Boolean", FeatureCategory: "NoSQL Features", FeatureParent: "NoSQL Features", FeatureSupportedAlternatives: "28", FeatureCriterionValue: "" },{id: 636182151298997405,FeatureID:"636182151298997405",Feature: "XPath", MoSCoW: "", Description: "The DBMS supports XPath API", FeatureDataType: "Boolean", FeatureCategory: "NoSQL Features", FeatureParent: "NoSQL Features", FeatureSupportedAlternatives: "41", FeatureCriterionValue: "" },{id: 636182151297193636,FeatureID:"636182151297193636",Feature: "XML ", MoSCoW: "", Description: "The DBMS supports XML API", FeatureDataType: "Boolean", FeatureCategory: "NoSQL Features", FeatureParent: "NoSQL Features", FeatureSupportedAlternatives: "53", FeatureCriterionValue: "" },]},] },{id: 17, FeatureID:"",Feature: "Data Types", MoSCoW: "", Description: "", FeatureDataType: "Category", FeatureCategory: "", FeatureParent: "", FeatureSupportedAlternatives: "", FeatureCriterionValue: "", _children: [{id: 636253348840156497,FeatureID:"636253348840156497",Feature: "Data Types", MoSCoW: "", Description: "A data type or simply type is a classification of data which tells the compiler or interpreter how the programmer intends to use the data. Most programming languages support various types of data, for example: real, integer or Boolean. A Data type provides a set of values from which an expression (i.e. variable, function ...) may take its values. The type defines the operations that can be done on the data, the meaning of the data, and the way values of that type can be stored.", FeatureDataType: "Collection", FeatureCategory: "Data Types", FeatureParent: "NULL", FeatureSupportedAlternatives: "73", FeatureCriterionValue: "", _children: [{id: 636182151289857127,FeatureID:"636182151289857127",Feature: "Range types", MoSCoW: "", Description: "A data type that represents a range of values", FeatureDataType: "Boolean", FeatureCategory: "Data Types", FeatureParent: "Data Types", FeatureSupportedAlternatives: "31", FeatureCriterionValue: "" },{id: 636182151288141096,FeatureID:"636182151288141096",Feature: "Big Binary (Blob)", MoSCoW: "", Description: "A Binary Large OBject (BLOB) is a collection of binary data stored as a single entity in a database management system. Blobs are typically images, audio or other multimedia objects, though sometimes binary executable code is stored as a blob. Database support for blobs is not universal.", FeatureDataType: "Boolean", FeatureCategory: "Data Types", FeatureParent: "Data Types", FeatureSupportedAlternatives: "46", FeatureCriterionValue: "" },{id: 636182151286897771,FeatureID:"636182151286897771",Feature: "TIMESTAMP", MoSCoW: "", Description: "A data type that only stores a date and time", FeatureDataType: "Boolean", FeatureCategory: "Data Types", FeatureParent: "Data Types", FeatureSupportedAlternatives: "42", FeatureCriterionValue: "" },{id: 636182151285460796,FeatureID:"636182151285460796",Feature: "DATE", MoSCoW: "", Description: "A data type that only stores a date (without a time)", FeatureDataType: "Boolean", FeatureCategory: "Data Types", FeatureParent: "Data Types", FeatureSupportedAlternatives: "43", FeatureCriterionValue: "" },{id: 636182151284093394,FeatureID:"636182151284093394",Feature: "TIME", MoSCoW: "", Description: "A data type that only stores a time", FeatureDataType: "Boolean", FeatureCategory: "Data Types", FeatureParent: "Data Types", FeatureSupportedAlternatives: "42", FeatureCriterionValue: "" },{id: 636182151283372021,FeatureID:"636182151283372021",Feature: "Interval", MoSCoW: "", Description: "An interval is defined as the difference between two dates and times. ", FeatureDataType: "Boolean", FeatureCategory: "Data Types", FeatureParent: "Data Types", FeatureSupportedAlternatives: "33", FeatureCriterionValue: "" },{id: 636182151281292588,FeatureID:"636182151281292588",Feature: "BOOLEAN", MoSCoW: "", Description: "Standard boolean data type as defined by the SQL standard (usable as a column data type)", FeatureDataType: "Boolean", FeatureCategory: "Data Types", FeatureParent: "Data Types", FeatureSupportedAlternatives: "59", FeatureCriterionValue: "" },{id: 636182151278250036,FeatureID:"636182151278250036",Feature: "String", MoSCoW: "", Description: "String data type", FeatureDataType: "Boolean", FeatureCategory: "Data Types", FeatureParent: "Data Types", FeatureSupportedAlternatives: "71", FeatureCriterionValue: "" },{id: 636182151275886330,FeatureID:"636182151275886330",Feature: "Numbers", MoSCoW: "", Description: "Any type of nemric data type, including integer, float, double, etc.", FeatureDataType: "Boolean", FeatureCategory: "Data Types", FeatureParent: "Data Types", FeatureSupportedAlternatives: "67", FeatureCriterionValue: "" },{id: 636182151275327192,FeatureID:"636182151275327192",Feature: "Enums", MoSCoW: "", Description: "De-normalize lookup values by specifying a fixed set of allowed values (a special case of a check constraint)", FeatureDataType: "Boolean", FeatureCategory: "Data Types", FeatureParent: "Data Types", FeatureSupportedAlternatives: "28", FeatureCriterionValue: "" },{id: 636182151273709545,FeatureID:"636182151273709545",Feature: "Arrays", MoSCoW: "", Description: "an array type is a data type that is meant to describe a collection of elements ", FeatureDataType: "Boolean", FeatureCategory: "Data Types", FeatureParent: "Data Types", FeatureSupportedAlternatives: "49", FeatureCriterionValue: "" },{id: 636182151271960801,FeatureID:"636182151271960801",Feature: "Domains", MoSCoW: "", Description: "A special kind of user defined data type that can also include check constraints, usually based on a base data type", FeatureDataType: "Boolean", FeatureCategory: "Data Types", FeatureParent: "Data Types", FeatureSupportedAlternatives: "55", FeatureCriterionValue: "" },{id: 636182151270399590,FeatureID:"636182151270399590",Feature: "User defined datatype (UDT)", MoSCoW: "", Description: "Crate UDTs using SQL and use those UDTs as a column&quot;s data type", FeatureDataType: "Boolean", FeatureCategory: "Data Types", FeatureParent: "Data Types", FeatureSupportedAlternatives: "51", FeatureCriterionValue: "" },]},] },{id: 18, FeatureID:"",Feature: "Secondary Indexing", MoSCoW: "", Description: "", FeatureDataType: "Category", FeatureCategory: "", FeatureParent: "", FeatureSupportedAlternatives: "", FeatureCriterionValue: "", _children: [{id: 636253348839936160,FeatureID:"636253348839936160",Feature: "Secondary Indexing", MoSCoW: "", Description: "A secondary index is a data structure that contains a subset of attributes from a table, along with an alternate key to support Query operations. You can retrieve data from the index using a Query , in much the same way as you use Query with a table.", FeatureDataType: "Collection", FeatureCategory: "Secondary Indexing", FeatureParent: "NULL", FeatureSupportedAlternatives: "46", FeatureCriterionValue: "", _children: [{id: 636182151267115499,FeatureID:"636182151267115499",Feature: "Duplicate NULL values in unique index", MoSCoW: "", Description: "The SQL standard requires that a unique index allows multiple 1 values.", FeatureDataType: "Boolean", FeatureCategory: "Secondary Indexing", FeatureParent: "Secondary Indexing", FeatureSupportedAlternatives: "10", FeatureCriterionValue: "" },{id: 636182151266474378,FeatureID:"636182151266474378",Feature: "Clustered index (Multikey Index)", MoSCoW: "", Description: "An index that contains the table data (index and table storage are the same)", FeatureDataType: "Boolean", FeatureCategory: "Secondary Indexing", FeatureParent: "Secondary Indexing", FeatureSupportedAlternatives: "18", FeatureCriterionValue: "" },{id: 636182151266033798,FeatureID:"636182151266033798",Feature: "Index include columns (Compound Index)", MoSCoW: "", Description: "Define an index on some columns and include other (non-indexed) columns", FeatureDataType: "Boolean", FeatureCategory: "Secondary Indexing", FeatureParent: "Secondary Indexing", FeatureSupportedAlternatives: "16", FeatureCriterionValue: "" },{id: 636182151265232337,FeatureID:"636182151265232337",Feature: "Index using a custom function", MoSCoW: "", Description: "Create an expression index using a custom function (written in a SQL procedural language)reate an expression index", FeatureDataType: "Boolean", FeatureCategory: "Secondary Indexing", FeatureParent: "Secondary Indexing", FeatureSupportedAlternatives: "25", FeatureCriterionValue: "" },{id: 636182151264350889,FeatureID:"636182151264350889",Feature: "Index on expression (Text Indexes)", MoSCoW: "", Description: "Create an index based on an expression/function", FeatureDataType: "Boolean", FeatureCategory: "Secondary Indexing", FeatureParent: "Secondary Indexing", FeatureSupportedAlternatives: "25", FeatureCriterionValue: "" },{id: 636182151262467756,FeatureID:"636182151262467756",Feature: "Descending Index (Sorted/[Single Field] Index)", MoSCoW: "", Description: "Define an index that is sorted descending", FeatureDataType: "Boolean", FeatureCategory: "Secondary Indexing", FeatureParent: "Secondary Indexing", FeatureSupportedAlternatives: "37", FeatureCriterionValue: "" },{id: 636182151260945357,FeatureID:"636182151260945357",Feature: "Partial index", MoSCoW: "", Description: "Define an index on a subset of entities", FeatureDataType: "Boolean", FeatureCategory: "Secondary Indexing", FeatureParent: "Secondary Indexing", FeatureSupportedAlternatives: "26", FeatureCriterionValue: "" },]},] },{id: 19, FeatureID:"",Feature: "Query Statements", MoSCoW: "", Description: "", FeatureDataType: "Category", FeatureCategory: "", FeatureParent: "", FeatureSupportedAlternatives: "", FeatureCriterionValue: "", _children: [{id: 636253348839681569,FeatureID:"636253348839681569",Feature: "Query Statements", MoSCoW: "", Description: "These statements are used to perform tasks such as update data on a database, or retrieve data from a database.", FeatureDataType: "Collection", FeatureCategory: "Query Statements", FeatureParent: "NULL", FeatureSupportedAlternatives: "68", FeatureCriterionValue: "", _children: [{id: 636182151719726442,FeatureID:"636182151719726442",Feature: "Graph", MoSCoW: "Must-Have", Description: "A graph database is a database that uses graph structures for semantic queries with nodes, edges and properties to represent and store data. The edges allow data in the store to be linked together directly, and in most cases retrieved with a single operation. This contrasts with conventional relational databases, where links between data are stored in the data itself, and queries search for this data within the store and use the JOIN concept to collect the related data. ", FeatureDataType: "Boolean", FeatureCategory: "Data storage model", FeatureParent: "Query Statements", FeatureSupportedAlternatives: "10", FeatureCriterionValue: "" },{id: 636182151596564552,FeatureID:"636182151596564552",Feature: "Query variables", MoSCoW: "", Description: "Variables that can be used inside a single query without the need to use procedural code", FeatureDataType: "Boolean", FeatureCategory: "Query Statements", FeatureParent: "Query Statements", FeatureSupportedAlternatives: "10", FeatureCriterionValue: "" },{id: 636182151595484742,FeatureID:"636182151595484742",Feature: "UPDATE with a join", MoSCoW: "", Description: "The ability to JOIN multiple tables when using UPDATE", FeatureDataType: "Boolean", FeatureCategory: "Query Statements", FeatureParent: "Query Statements", FeatureSupportedAlternatives: "12", FeatureCriterionValue: "" },{id: 636182151593000081,FeatureID:"636182151593000081",Feature: "Tuple updates", MoSCoW: "", Description: "The ability to update multiple columns (tuples) with a single SET operator", FeatureDataType: "Boolean", FeatureCategory: "Query Statements", FeatureParent: "Query Statements", FeatureSupportedAlternatives: "19", FeatureCriterionValue: "" },{id: 636182151590435785,FeatureID:"636182151590435785",Feature: "Tuple comparison", MoSCoW: "", Description: "The ability to compare multiple columns (tuples) the same way a single column can be compared", FeatureDataType: "Boolean", FeatureCategory: "Query Statements", FeatureParent: "Query Statements", FeatureSupportedAlternatives: "22", FeatureCriterionValue: "" },{id: 636182151587550171,FeatureID:"636182151587550171",Feature: "Aggregates for strings", MoSCoW: "", Description: "Aggregate multiple string values to a single value, optionally delimited.", FeatureDataType: "Boolean", FeatureCategory: "Query Statements", FeatureParent: "Query Statements", FeatureSupportedAlternatives: "23", FeatureCriterionValue: "" },{id: 636182151585626025,FeatureID:"636182151585626025",Feature: "SELECT without a FROM clause", MoSCoW: "", Description: "A SELECT that returns one (or more) constant values without a FROM clause.", FeatureDataType: "Boolean", FeatureCategory: "Query Statements", FeatureParent: "Query Statements", FeatureSupportedAlternatives: "15", FeatureCriterionValue: "" },{id: 636182151584944272,FeatureID:"636182151584944272",Feature: "Temporal queries", MoSCoW: "", Description: "Temporal queries allow querying the database (or a single table) to return the data as it was in the past", FeatureDataType: "Boolean", FeatureCategory: "Query Statements", FeatureParent: "Query Statements", FeatureSupportedAlternatives: "9", FeatureCriterionValue: "" },{id: 636182151583145529,FeatureID:"636182151583145529",Feature: "GROUP BY .. ROLLUP", MoSCoW: "", Description: "The ROLLUP, CUBE, or GROUPING SETS operators can generate the same result set as when you use UNION ALL to combine single grouping queries;", FeatureDataType: "Boolean", FeatureCategory: "Query Statements", FeatureParent: "Query Statements", FeatureSupportedAlternatives: "22", FeatureCriterionValue: "" },{id: 636182151582379395,FeatureID:"636182151582379395",Feature: "PIVOT Support", MoSCoW: "", Description: "PIVOT rotates a table-valued expression by turning the unique values from one column in the expression into multiple columns in the output, and performs aggregations where they are required on any remaining column values that are wanted in the final output. ", FeatureDataType: "Boolean", FeatureCategory: "Query Statements", FeatureParent: "Query Statements", FeatureSupportedAlternatives: "8", FeatureCriterionValue: "" },{id: 636182151581376940,FeatureID:"636182151581376940",Feature: "Filtered aggregates", MoSCoW: "", Description: "Filtered aggregates are used to include only some rows into the aggregation", FeatureDataType: "Boolean", FeatureCategory: "Query Statements", FeatureParent: "Query Statements", FeatureSupportedAlternatives: "5", FeatureCriterionValue: "" },{id: 636182151579613878,FeatureID:"636182151579613878",Feature: "Row constructor", MoSCoW: "", Description: "Use of the VALUES row-constructor wherever a table reference can be used.Sometimes also called table value constructorse of the VALUES row-con", FeatureDataType: "Boolean", FeatureCategory: "Query Statements", FeatureParent: "Query Statements", FeatureSupportedAlternatives: "18", FeatureCriterionValue: "" },{id: 636182151578201215,FeatureID:"636182151578201215",Feature: "Recursive Queries", MoSCoW: "", Description: "Recursive queries are used to query hierarchical data. The SQL standard defines a special syntax for common table expressions to enable recursive processing.", FeatureDataType: "Boolean", FeatureCategory: "Query Statements", FeatureParent: "Query Statements", FeatureSupportedAlternatives: "25", FeatureCriterionValue: "" },{id: 636182151577652491,FeatureID:"636182151577652491",Feature: "CTE in a sub-query", MoSCoW: "", Description: "Use a common table expression in a sub-query, not only as a top level query", FeatureDataType: "Boolean", FeatureCategory: "Query Statements", FeatureParent: "Query Statements", FeatureSupportedAlternatives: "12", FeatureCriterionValue: "" },{id: 636182151576890529,FeatureID:"636182151576890529",Feature: "Common Table Expressions", MoSCoW: "", Description: "A common table expression very similar to a derived table, only that it can be used multiple times in a query", FeatureDataType: "Boolean", FeatureCategory: "Query Statements", FeatureParent: "Query Statements", FeatureSupportedAlternatives: "23", FeatureCriterionValue: "" },{id: 636182151576450141,FeatureID:"636182151576450141",Feature: "Window functions", MoSCoW: "", Description: "Window functions (introduced in the SQL 2003 standard) allow to calculate grouped values without grouping the overall query: multiple times in a query", FeatureDataType: "Boolean", FeatureCategory: "Query Statements", FeatureParent: "Query Statements", FeatureSupportedAlternatives: "19", FeatureCriterionValue: "" },{id: 636182151294387718,FeatureID:"636182151294387718",Feature: "Custom aggregation", MoSCoW: "", Description: "Create aggregate functions using SQL ", FeatureDataType: "Boolean", FeatureCategory: "Query Statements", FeatureParent: "Query Statements", FeatureSupportedAlternatives: "30", FeatureCriterionValue: "" },]},] },{id: 20, FeatureID:"",Feature: "String Functions", MoSCoW: "", Description: "", FeatureDataType: "Category", FeatureCategory: "", FeatureParent: "", FeatureSupportedAlternatives: "", FeatureCriterionValue: "", _children: [{id: 636253348839261073,FeatureID:"636253348839261073",Feature: "String Functions", MoSCoW: "", Description: "String functions are functions that have a non-numerical result. A string is a sequence of characters not interpreted as a number.", FeatureDataType: "Collection", FeatureCategory: "String Functions", FeatureParent: "NULL", FeatureSupportedAlternatives: "66", FeatureCriterionValue: "", _children: [{id: 636293703706375662,FeatureID:"636293703706375662",Feature: "Collation", MoSCoW: "", Description: "Collations provide sorting rules, case, and accent sensitivity properties for your data. Collations that are used with character data types such as char and varchar dictate the code page and corresponding characters that can be represented for that data type. ", FeatureDataType: "Boolean", FeatureCategory: "String Functions", FeatureParent: "String Functions", FeatureSupportedAlternatives: "47", FeatureCriterionValue: "" },{id: 636182151258379765,FeatureID:"636182151258379765",Feature: "Replace strings", MoSCoW: "", Description: "Replace values in a string based on a RegEx", FeatureDataType: "Boolean", FeatureCategory: "String Functions", FeatureParent: "String Functions", FeatureSupportedAlternatives: "65", FeatureCriterionValue: "" },{id: 636182151256133339,FeatureID:"636182151256133339",Feature: "Substring", MoSCoW: "", Description: "Extract the part of a string value based on a RegEx", FeatureDataType: "Boolean", FeatureCategory: "String Functions", FeatureParent: "String Functions", FeatureSupportedAlternatives: "65", FeatureCriterionValue: "" },{id: 636182151254128712,FeatureID:"636182151254128712",Feature: "Comparison based on RegEx (regular expression)", MoSCoW: "", Description: "Conditions with regular expressions that can be used e.g. in a WHERE clause", FeatureDataType: "Boolean", FeatureCategory: "String Functions", FeatureParent: "String Functions", FeatureSupportedAlternatives: "60", FeatureCriterionValue: "" },]},] },{id: 21, FeatureID:"",Feature: "Constraints", MoSCoW: "", Description: "", FeatureDataType: "Category", FeatureCategory: "", FeatureParent: "", FeatureSupportedAlternatives: "", FeatureCriterionValue: "", _children: [{id: 636253348839010269,FeatureID:"636253348839010269",Feature: "Constraints", MoSCoW: "", Description: "Constraints in DBMS. Constraints enforce limits to the data or type of data that can be inserted/updated/deleted from a table. The whole purpose of constraints is to maintain the data integrity during an update/delete/insert into a table.", FeatureDataType: "Collection", FeatureCategory: "Constraints", FeatureParent: "NULL", FeatureSupportedAlternatives: "29", FeatureCriterionValue: "", _children: [{id: 636182151603783218,FeatureID:"636182151603783218",Feature: "Referential integrity", MoSCoW: "", Description: "Referential integrity is a property of data which, when satisfied, requires every value of one attribute (column) of a relation (table) to exist as a value of another attribute (column) in a different (or the same) relation (table)", FeatureDataType: "Boolean", FeatureCategory: "Constraints", FeatureParent: "Constraints", FeatureSupportedAlternatives: "29", FeatureCriterionValue: "" },{id: 636182151603663359,FeatureID:"636182151603663359",Feature: "Exclusion constraints", MoSCoW: "", Description: "Constraints that prevent e.g. overlapping ranges", FeatureDataType: "Boolean", FeatureCategory: "Constraints", FeatureParent: "Constraints", FeatureSupportedAlternatives: "4", FeatureCriterionValue: "" },{id: 636182151603061295,FeatureID:"636182151603061295",Feature: "Check constraints using custom functions", MoSCoW: "", Description: "Create a check constraint that is based on the return value of a user-defined function", FeatureDataType: "Boolean", FeatureCategory: "Constraints", FeatureParent: "Constraints", FeatureSupportedAlternatives: "19", FeatureCriterionValue: "" },{id: 636182151602901072,FeatureID:"636182151602901072",Feature: "Check constraints with sub-query", MoSCoW: "", Description: "Check constraint using a sub-select ", FeatureDataType: "Boolean", FeatureCategory: "Constraints", FeatureParent: "Constraints", FeatureSupportedAlternatives: "1", FeatureCriterionValue: "" },{id: 636182151599455611,FeatureID:"636182151599455611",Feature: "Check constraints", MoSCoW: "", Description: "Simple check constraint ", FeatureDataType: "Boolean", FeatureCategory: "Constraints", FeatureParent: "Constraints", FeatureSupportedAlternatives: "26", FeatureCriterionValue: "" },{id: 636182151597846081,FeatureID:"636182151597846081",Feature: "Deferred constraints", MoSCoW: "", Description: "By default foreign key constraints are evaluated when the DML statement is executed. When a constraint is deferred, it is checked only when the transaction is committed. ", FeatureDataType: "Boolean", FeatureCategory: "Constraints", FeatureParent: "Constraints", FeatureSupportedAlternatives: "11", FeatureCriterionValue: "" },]},] },{id: 22, FeatureID:"",Feature: "Join Statements", MoSCoW: "", Description: "", FeatureDataType: "Category", FeatureCategory: "", FeatureParent: "", FeatureSupportedAlternatives: "", FeatureCriterionValue: "", _children: [{id: 636253348838776143,FeatureID:"636253348838776143",Feature: "Join Statements", MoSCoW: "", Description: "Join (SQL) A SQL join clause combines columns from one or more tables in a relational database. It creates a set that can be saved as a table or used as it is. A JOIN is a means for combining columns from one (self-table) or more tables by using values common to each.", FeatureDataType: "Collection", FeatureCategory: "Join Statements", FeatureParent: "NULL", FeatureSupportedAlternatives: "29", FeatureCriterionValue: "", _children: [{id: 636182151576146170,FeatureID:"636182151576146170",Feature: "OVERLAPS", MoSCoW: "", Description: "Checks for overlapping intervals", FeatureDataType: "Boolean", FeatureCategory: "Join Statements", FeatureParent: "Join Statements", FeatureSupportedAlternatives: "8", FeatureCriterionValue: "" },{id: 636182151575890706,FeatureID:"636182151575890706",Feature: "BETWEEN SYMMETRIC", MoSCoW: "", Description: "By default the the BETWEEN operator requires the lower bound and upper bound to be in order will not return anything. When using BETWEEN SYMMETRIC, the order is irrelevant.y default the the BETWEEN operator requires the lower bound and upper bound to be in orde defaul", FeatureDataType: "Boolean", FeatureCategory: "Join Statements", FeatureParent: "Join Statements", FeatureSupportedAlternatives: "5", FeatureCriterionValue: "" },{id: 636182151575490504,FeatureID:"636182151575490504",Feature: "IS DISTINCT FROM", MoSCoW: "", Description: "IS DISTINCT FROM allows a 1 aware comparison to test if two values are different", FeatureDataType: "Boolean", FeatureCategory: "Join Statements", FeatureParent: "Join Statements", FeatureSupportedAlternatives: "9", FeatureCriterionValue: "" },{id: 636182151574212841,FeatureID:"636182151574212841",Feature: "ORDER BY ... NULLS LAST", MoSCoW: "", Description: "The SQL standard does not define the order of rows when 1 values are present in the column on which the result is sorted. To control if 1 values should be sorted before or after non-1 values, 1S FIRST/LAST can be added to an ORDER BY clause", FeatureDataType: "Boolean", FeatureCategory: "Join Statements", FeatureParent: "Join Statements", FeatureSupportedAlternatives: "18", FeatureCriterionValue: "" },{id: 636182151571962745,FeatureID:"636182151571962745",Feature: "EXCEPT", MoSCoW: "", Description: "Returns any distinct values from the query to the left of the EXCEPT operator that are not also returned from the right query.", FeatureDataType: "Boolean", FeatureCategory: "Join Statements", FeatureParent: "Join Statements", FeatureSupportedAlternatives: "25", FeatureCriterionValue: "" },{id: 636182151570005724,FeatureID:"636182151570005724",Feature: "INTERSECT", MoSCoW: "", Description: "Returns any distinct values that are returned by both the query on the left and right sides of the INTERSECT operator.", FeatureDataType: "Boolean", FeatureCategory: "Join Statements", FeatureParent: "Join Statements", FeatureSupportedAlternatives: "25", FeatureCriterionValue: "" },{id: 636182151568172919,FeatureID:"636182151568172919",Feature: "JOINs using tuple comparison", MoSCoW: "", Description: "Use tuples in JOIN conditions ", FeatureDataType: "Boolean", FeatureCategory: "Join Statements", FeatureParent: "Join Statements", FeatureSupportedAlternatives: "18", FeatureCriterionValue: "" },{id: 636182151566639479,FeatureID:"636182151566639479",Feature: "JOIN ... USING ", MoSCoW: "", Description: "A shortcut notation for the JOIN operator when both columns have the same name. ", FeatureDataType: "Boolean", FeatureCategory: "Join Statements", FeatureParent: "Join Statements", FeatureSupportedAlternatives: "16", FeatureCriterionValue: "" },{id: 636182151565959493,FeatureID:"636182151565959493",Feature: "LATERAL JOIN", MoSCoW: "", Description: "Subqueries appearing in FROM can be preceded by the key word LATERAL. This allows them to reference columns provided by preceding FROM items. (Without LATERAL, each subquery is evaluated independently and so cannot cross-reference any other FROM item.)", FeatureDataType: "Boolean", FeatureCategory: "Join Statements", FeatureParent: "Join Statements", FeatureSupportedAlternatives: "19", FeatureCriterionValue: "" },{id: 636182151564140995,FeatureID:"636182151564140995",Feature: "FULL OUTER JOIN", MoSCoW: "", Description: "In SQL the FULL OUTER JOIN combines the results of both left and right outer joins and returns all (matched or unmatched) rows from the tables on both sides of the join clause. ", FeatureDataType: "Boolean", FeatureCategory: "Join Statements", FeatureParent: "Join Statements", FeatureSupportedAlternatives: "21", FeatureCriterionValue: "" },{id: 636182151562031095,FeatureID:"636182151562031095",Feature: "CROSS JOIN", MoSCoW: "", Description: "The SQL CROSS JOIN produces a result set which is the number of rows in the first table multiplied by the number of rows in the second table if no WHERE clause is used along with CROSS JOIN. This kind of result is called as Cartesian Product. If WHERE clause is used with CROSS JOIN, it functions like an INNER JOIN.", FeatureDataType: "Boolean", FeatureCategory: "Join Statements", FeatureParent: "Join Statements", FeatureSupportedAlternatives: "29", FeatureCriterionValue: "" },]},] },{id: 23, FeatureID:"",Feature: "Supported Driver (PL)", MoSCoW: "", Description: "", FeatureDataType: "Category", FeatureCategory: "", FeatureParent: "", FeatureSupportedAlternatives: "", FeatureCriterionValue: "", _children: [{id: 636253348838486554,FeatureID:"636253348838486554",Feature: "Supported Driver (PL)", MoSCoW: "", Description: "Drivers are a software component enabling an application to interact with a database. They are designed to work with a specific programming language.", FeatureDataType: "Collection", FeatureCategory: "Supported Driver (PL)", FeatureParent: "NULL", FeatureSupportedAlternatives: "73", FeatureCriterionValue: "", _children: [{id: 636182151560197301,FeatureID:"636182151560197301",Feature: "PHP", MoSCoW: "", Description: "Supports PHP driver", FeatureDataType: "Boolean", FeatureCategory: "Supported Driver (PL)", FeatureParent: "Supported Driver (PL)", FeatureSupportedAlternatives: "46", FeatureCriterionValue: "" },{id: 636182151557621658,FeatureID:"636182151557621658",Feature: "Python", MoSCoW: "", Description: "Supports Python driver", FeatureDataType: "Boolean", FeatureCategory: "Supported Driver (PL)", FeatureParent: "Supported Driver (PL)", FeatureSupportedAlternatives: "52", FeatureCriterionValue: "" },{id: 636182151551138743,FeatureID:"636182151551138743",Feature: "C  ", MoSCoW: "", Description: "Supports C   driver", FeatureDataType: "Boolean", FeatureCategory: "Supported Driver (PL)", FeatureParent: "Supported Driver (PL)", FeatureSupportedAlternatives: "43", FeatureCriterionValue: "" },{id: 636182151534084668,FeatureID:"636182151534084668",Feature: "C#", MoSCoW: "", Description: "Supports C# driver", FeatureDataType: "Boolean", FeatureCategory: "Supported Driver (PL)", FeatureParent: "Supported Driver (PL)", FeatureSupportedAlternatives: "62", FeatureCriterionValue: "" },{id: 636182151540672003,FeatureID:"636182151540672003",Feature: "Java", MoSCoW: "Must-Have", Description: "Supports Java driver", FeatureDataType: "Boolean", FeatureCategory: "Supported Driver (PL)", FeatureParent: "Supported Driver (PL)", FeatureSupportedAlternatives: "70", FeatureCriterionValue: "" },]},] },{id: 24, FeatureID:"",Feature: "Supported Platform", MoSCoW: "", Description: "", FeatureDataType: "Category", FeatureCategory: "", FeatureParent: "", FeatureSupportedAlternatives: "", FeatureCriterionValue: "", _children: [{id: 636253348838180321,FeatureID:"636253348838180321",Feature: "Supported Platform", MoSCoW: "", Description: "Operating System/Platform", FeatureDataType: "Collection", FeatureCategory: "Supported Platform", FeatureParent: "NULL", FeatureSupportedAlternatives: "73", FeatureCriterionValue: "", _children: [{id: 636182151533457966,FeatureID:"636182151533457966",Feature: "OpenVMS", MoSCoW: "", Description: "The DBMS can be installed on OpenVMS X operating system", FeatureDataType: "Boolean", FeatureCategory: "Supported Platform", FeatureParent: "Supported Platform", FeatureSupportedAlternatives: "6", FeatureCriterionValue: "" },{id: 636182151532495697,FeatureID:"636182151532495697",Feature: "Android", MoSCoW: "", Description: "The DBMS can be installed on Android X operating system", FeatureDataType: "Boolean", FeatureCategory: "Supported Platform", FeatureParent: "Supported Platform", FeatureSupportedAlternatives: "11", FeatureCriterionValue: "" },{id: 636182151531814114,FeatureID:"636182151531814114",Feature: "iOS", MoSCoW: "", Description: "The DBMS can be installed on iOS X operating system", FeatureDataType: "Boolean", FeatureCategory: "Supported Platform", FeatureParent: "Supported Platform", FeatureSupportedAlternatives: "3", FeatureCriterionValue: "" },{id: 636182151529410528,FeatureID:"636182151529410528",Feature: "z/OS", MoSCoW: "", Description: "The DBMS can be installed on z/OS X operating system", FeatureDataType: "Boolean", FeatureCategory: "Supported Platform", FeatureParent: "Supported Platform", FeatureSupportedAlternatives: "16", FeatureCriterionValue: "" },{id: 636182151528808331,FeatureID:"636182151528808331",Feature: "Symbian", MoSCoW: "", Description: "The DBMS can be installed on Symbian X operating system", FeatureDataType: "Boolean", FeatureCategory: "Supported Platform", FeatureParent: "Supported Platform", FeatureSupportedAlternatives: "6", FeatureCriterionValue: "" },{id: 636182151528167448,FeatureID:"636182151528167448",Feature: "AmigaOS", MoSCoW: "", Description: "The DBMS can be installed on AmigaOS X operating system", FeatureDataType: "Boolean", FeatureCategory: "Supported Platform", FeatureParent: "Supported Platform", FeatureSupportedAlternatives: "6", FeatureCriterionValue: "" },{id: 636182151525201953,FeatureID:"636182151525201953",Feature: "UNIX", MoSCoW: "", Description: "The DBMS can be installed on UNIX X operating system", FeatureDataType: "Boolean", FeatureCategory: "Supported Platform", FeatureParent: "Supported Platform", FeatureSupportedAlternatives: "24", FeatureCriterionValue: "" },{id: 636182151522196789,FeatureID:"636182151522196789",Feature: "BSD", MoSCoW: "", Description: "The DBMS can be installed on BSD X operating system", FeatureDataType: "Boolean", FeatureCategory: "Supported Platform", FeatureParent: "Supported Platform", FeatureSupportedAlternatives: "20", FeatureCriterionValue: "" },{id: 636182151512217571,FeatureID:"636182151512217571",Feature: "Linux", MoSCoW: "", Description: "The DBMS can be installed on Linux X operating system", FeatureDataType: "Boolean", FeatureCategory: "Supported Platform", FeatureParent: "Supported Platform", FeatureSupportedAlternatives: "64", FeatureCriterionValue: "" },{id: 636182151505109668,FeatureID:"636182151505109668",Feature: "OS X", MoSCoW: "", Description: "The DBMS can be installed on OS X operating system", FeatureDataType: "Boolean", FeatureCategory: "Supported Platform", FeatureParent: "Supported Platform", FeatureSupportedAlternatives: "42", FeatureCriterionValue: "" },{id: 636182151496071560,FeatureID:"636182151496071560",Feature: "Windows", MoSCoW: "", Description: "The DBMS can be installed on Microsoft windows X operating system", FeatureDataType: "Boolean", FeatureCategory: "Supported Platform", FeatureParent: "Supported Platform", FeatureSupportedAlternatives: "66", FeatureCriterionValue: "" },{id: 636182151490852585,FeatureID:"636182151490852585",Feature: "Database as a service (DaaS)", MoSCoW: "", Description: "A cloud database is a database that typically runs on a cloud computing platform. There are two common deployment models: users can run databases on the cloudindependently, using a virtual machine image, or they can purchase access to a database service, maintained by a cloud database provider.", FeatureDataType: "Boolean", FeatureCategory: "Supported Platform", FeatureParent: "Supported Platform", FeatureSupportedAlternatives: "2", FeatureCriterionValue: "" },]},] },{id: 25, FeatureID:"",Feature: "Cardinality/Relationship", MoSCoW: "", Description: "", FeatureDataType: "Category", FeatureCategory: "", FeatureParent: "", FeatureSupportedAlternatives: "", FeatureCriterionValue: "", _children: [{id: 636253348837914614,FeatureID:"636253348837914614",Feature: "Cardinality/Relationship", MoSCoW: "", Description: "The degree of relationship (also known as cardinality) is the number of occurrences in one entity which are associated (or linked) to the number of occurrences in another. There are three degrees of relationship, known as: one-to-one (1:1) one-to-many (1:M)", FeatureDataType: "Collection", FeatureCategory: "Cardinality/Relationship", FeatureParent: "NULL", FeatureSupportedAlternatives: "73", FeatureCriterionValue: "", _children: [{id: 636182151488405516,FeatureID:"636182151488405516",Feature: "Many-to-many", MoSCoW: "", Description: "m:n", FeatureDataType: "Boolean", FeatureCategory: "Cardinality/Relationship", FeatureParent: "Cardinality/Relationship", FeatureSupportedAlternatives: "39", FeatureCriterionValue: "" },{id: 636182151483604777,FeatureID:"636182151483604777",Feature: "One-to-many", MoSCoW: "", Description: "1:m", FeatureDataType: "Boolean", FeatureCategory: "Cardinality/Relationship", FeatureParent: "Cardinality/Relationship", FeatureSupportedAlternatives: "64", FeatureCriterionValue: "" },{id: 636182151480010168,FeatureID:"636182151480010168",Feature: "One-to-one", MoSCoW: "", Description: "1:1", FeatureDataType: "Boolean", FeatureCategory: "Cardinality/Relationship", FeatureParent: "Cardinality/Relationship", FeatureSupportedAlternatives: "73", FeatureCriterionValue: "" },]},] },{id: 26, FeatureID:"",Feature: "Compression", MoSCoW: "", Description: "", FeatureDataType: "Category", FeatureCategory: "", FeatureParent: "", FeatureSupportedAlternatives: "", FeatureCriterionValue: "", _children: [{id: 636253348837728746,FeatureID:"636253348837728746",Feature: "Compression", MoSCoW: "", Description: "Compression is a reduction in the number of bits needed to represent data. Compressing data can save storage capacity, speed file transfer, and decrease costs for storage hardware and network bandwidth.", FeatureDataType: "Collection", FeatureCategory: "Compression", FeatureParent: "NULL", FeatureSupportedAlternatives: "48", FeatureCriterionValue: "", _children: [{id: 636182151472389567,FeatureID:"636182151472389567",Feature: "Unicode Compression ", MoSCoW: "", Description: "The Standard Compression Scheme for Unicode (SCSU) is a Unicode Technical Standard for reducing the number of bytes needed to represent Unicode text, especially if that text uses mostly characters from one or a small number of per-language character blocks.", FeatureDataType: "Boolean", FeatureCategory: "Compression", FeatureParent: "Compression", FeatureSupportedAlternatives: "48", FeatureCriterionValue: "" },{id: 636182151471387874,FeatureID:"636182151471387874",Feature: "Dictionary compression", MoSCoW: "", Description: "Dictionary compression searches for repeated values anywhere on the page, and stores them in the CI area.", FeatureDataType: "Boolean", FeatureCategory: "Compression", FeatureParent: "Compression", FeatureSupportedAlternatives: "15", FeatureCriterionValue: "" },{id: 636182151469060846,FeatureID:"636182151469060846",Feature: "Prefix compression", MoSCoW: "", Description: "For each field, a value is identified that can be used to reduce the storage space for the values in each field", FeatureDataType: "Boolean", FeatureCategory: "Compression", FeatureParent: "Compression", FeatureSupportedAlternatives: "23", FeatureCriterionValue: "" },{id: 636182151465622227,FeatureID:"636182151465622227",Feature: "Entity Compression", MoSCoW: "", Description: "For each entity a value is identified that can be used to reduce the storage space for the values in each entity", FeatureDataType: "Boolean", FeatureCategory: "Compression", FeatureParent: "Compression", FeatureSupportedAlternatives: "24", FeatureCriterionValue: "" },]},] },{id: 27, FeatureID:"",Feature: "Popularity", MoSCoW: "", Description: "", FeatureDataType: "Category", FeatureCategory: "", FeatureParent: "", FeatureSupportedAlternatives: "", FeatureCriterionValue: "", _children: [{id: 636182151705332867,FeatureID:"636182151705332867",Feature: "Popularity in the market", MoSCoW: "Should-Have", Description: "db-engines.com ranking", FeatureDataType: "Numeric", FeatureCategory: "Popularity", FeatureParent: "NULL", FeatureSupportedAlternatives: "73", FeatureCriterionValue: "None"},] },{id: 28, FeatureID:"",Feature: "Total Cost of Ownership", MoSCoW: "", Description: "", FeatureDataType: "Category", FeatureCategory: "", FeatureParent: "", FeatureSupportedAlternatives: "", FeatureCriterionValue: "", _children: [{id: 636293704072285411,FeatureID:"636293704072285411",Feature: "Advanced server configuration TCO", MoSCoW: "", Description: "Total Cost of Ownership (TCO) of the Advanced Server configuration", FeatureDataType: "Monetary", FeatureCategory: "Total Cost of Ownership", FeatureParent: "NULL", FeatureSupportedAlternatives: "22", FeatureCriterionValue: "None"},{id: 636293704030497030,FeatureID:"636293704030497030",Feature: "Intermediate server configuration TCO", MoSCoW: "", Description: "Total Cost of Ownership (TCO) of the Intermediate Server configuration", FeatureDataType: "Monetary", FeatureCategory: "Total Cost of Ownership", FeatureParent: "NULL", FeatureSupportedAlternatives: "27", FeatureCriterionValue: "None"},{id: 636293703988982089,FeatureID:"636293703988982089",Feature: "Basic server configuration TCO", MoSCoW: "", Description: "Total Cost of Ownership (TCO) of the Basic Server configuration", FeatureDataType: "Monetary", FeatureCategory: "Total Cost of Ownership", FeatureParent: "NULL", FeatureSupportedAlternatives: "30", FeatureCriterionValue: "None"},{id: 636293703943332407,FeatureID:"636293703943332407",Feature: "PC TCO", MoSCoW: "", Description: "Total Cost of Ownership (TCO) of the PC configuration", FeatureDataType: "Monetary", FeatureCategory: "Total Cost of Ownership", FeatureParent: "NULL", FeatureSupportedAlternatives: "53", FeatureCriterionValue: "None"},{id: 636293703886948778,FeatureID:"636293703886948778",Feature: "TCO Includes Support", MoSCoW: "", Description: "Database maintenance and support included in the Total Cost of Ownership (TCO)", FeatureDataType: "Boolean", FeatureCategory: "Total Cost of Ownership", FeatureParent: "NULL", FeatureSupportedAlternatives: "30", FeatureCriterionValue: ""},{id: 636182151688398754,FeatureID:"636182151688398754",Feature: "Pricing Model", MoSCoW: "", Description: "A pricing model is a method used by a company to determine the prices for its products or services. A company must consider factors such as the positioning of its products and services as well as production costs when setting the prices of its goods and services.", FeatureDataType: "Description", FeatureCategory: "Total Cost of Ownership", FeatureParent: "NULL", FeatureSupportedAlternatives: "55", FeatureCriterionValue: ""},{id: 636182151681919153,FeatureID:"636182151681919153",Feature: "Open Source License", MoSCoW: "Must-Have", Description: "Open source licenses are licenses that comply with the Open Source Definition — in brief, they allow software to be freely used, modified, and shared. To be approved by the Open Source Initiative (also known as the OSI), a license must go through the Open Source Initiative&quot;s license review process.", FeatureDataType: "Boolean", FeatureCategory: "Total Cost of Ownership", FeatureParent: "NULL", FeatureSupportedAlternatives: "36", FeatureCriterionValue: ""},] },{id: 29, FeatureID:"",Feature: "Table functions", MoSCoW: "", Description: "", FeatureDataType: "Category", FeatureCategory: "", FeatureParent: "", FeatureSupportedAlternatives: "", FeatureCriterionValue: "", _children: [{id: 636182151671903608,FeatureID:"636182151671903608",Feature: "Table functions", MoSCoW: "", Description: "Functions that return result sets and can be used like a table ", FeatureDataType: "Collection", FeatureCategory: "Table functions", FeatureParent: "NULL", FeatureSupportedAlternatives: "20", FeatureCriterionValue: ""},] },{id: 30, FeatureID:"",Feature: "Access Control", MoSCoW: "", Description: "", FeatureDataType: "Category", FeatureCategory: "", FeatureParent: "", FeatureSupportedAlternatives: "", FeatureCriterionValue: "", _children: [{id: 636253348841787101,FeatureID:"636253348841787101",Feature: "Access Control", MoSCoW: "", Description: "Access control systems perform authorization identification, authentication, access approval, and accountability of entities through login credentials including passwords, personal identification numbers (PINs), biometric scans, and physical or electronic keys.", FeatureDataType: "Collection", FeatureCategory: "Access Control", FeatureParent: "NULL", FeatureSupportedAlternatives: "53", FeatureCriterionValue: "", _children: [{id: 636182151362915899,FeatureID:"636182151362915899",Feature: "Grant on column level", MoSCoW: "", Description: "Grant access to only some of the columns", FeatureDataType: "Boolean", FeatureCategory: "Access Control", FeatureParent: "Access Control", FeatureSupportedAlternatives: "5", FeatureCriterionValue: "" },{id: 636182151360633067,FeatureID:"636182151360633067",Feature: "Row level security", MoSCoW: "", Description: "Row level security (RLS) enables you to store data for many users in a single database and table, while at the same time restricting row-level access based on a user&quot;s identity, role, or execution context.", FeatureDataType: "Boolean", FeatureCategory: "Access Control", FeatureParent: "Access Control", FeatureSupportedAlternatives: "20", FeatureCriterionValue: "" },{id: 636182151357667470,FeatureID:"636182151357667470",Feature: "Role Based Access Control", MoSCoW: "", Description: "Role-based access control (RBAC) is an approach to restricting system access to authorized users.", FeatureDataType: "Boolean", FeatureCategory: "Access Control", FeatureParent: "Access Control", FeatureSupportedAlternatives: "46", FeatureCriterionValue: "" },{id: 636182151353098494,FeatureID:"636182151353098494",Feature: "Label Based Access Control ", MoSCoW: "", Description: "Label-based access control (LBAC)  is automatically enforced by the system; and roles, providing a fine-grained approach to system administration thereby eliminating the need for the super-user function.", FeatureDataType: "Boolean", FeatureCategory: "Access Control", FeatureParent: "Access Control", FeatureSupportedAlternatives: "42", FeatureCriterionValue: "" },]},{id: 636182151361154072,FeatureID:"636182151361154072",Feature: "Firewall protection", MoSCoW: "", Description: "A network security system that controls the incoming and outgoing network traffic based on an applied rule set. ", FeatureDataType: "Boolean", FeatureCategory: "Access Control", FeatureParent: "NULL", FeatureSupportedAlternatives: "24", FeatureCriterionValue: ""},] },{id: 31, FeatureID:"",Feature: "Function overloading", MoSCoW: "", Description: "", FeatureDataType: "Category", FeatureCategory: "", FeatureParent: "", FeatureSupportedAlternatives: "", FeatureCriterionValue: "", _children: [{id: 636182151295429370,FeatureID:"636182151295429370",Feature: "Function overloading", MoSCoW: "", Description: "Create different versions of the same function that are distinguished by their argument list ", FeatureDataType: "Collection", FeatureCategory: "Function overloading", FeatureParent: "NULL", FeatureSupportedAlternatives: "18", FeatureCriterionValue: ""},] },{id: 32, FeatureID:"",Feature: "User defined operators", MoSCoW: "", Description: "", FeatureDataType: "Category", FeatureCategory: "", FeatureParent: "", FeatureSupportedAlternatives: "", FeatureCriterionValue: "", _children: [{id: 636182151294187102,FeatureID:"636182151294187102",Feature: "User defined operators", MoSCoW: "", Description: "Create new (comparison) operators for user defined data types ", FeatureDataType: "Collection", FeatureCategory: "User defined operators", FeatureParent: "NULL", FeatureSupportedAlternatives: "5", FeatureCriterionValue: ""},] },{id: 33, FeatureID:"",Feature: "Built-in scheduler", MoSCoW: "", Description: "", FeatureDataType: "Category", FeatureCategory: "", FeatureParent: "", FeatureSupportedAlternatives: "", FeatureCriterionValue: "", _children: [{id: 636182151293307647,FeatureID:"636182151293307647",Feature: "Built-in scheduler", MoSCoW: "", Description: "Scheduled jobs with sessions and batch files as parameters are launched as services running in background. Scheduler allows keeping migration tasks unattended and executes them automatically at specified time or a particular period of time.", FeatureDataType: "Boolean", FeatureCategory: "Built-in scheduler", FeatureParent: "NULL", FeatureSupportedAlternatives: "29", FeatureCriterionValue: ""},] },{id: 34, FeatureID:"",Feature: "Stored procedure (UDF)", MoSCoW: "", Description: "", FeatureDataType: "Category", FeatureCategory: "", FeatureParent: "", FeatureSupportedAlternatives: "", FeatureCriterionValue: "", _children: [{id: 636182151290668412,FeatureID:"636182151290668412",Feature: "Stored procedure (UDF)", MoSCoW: "", Description: "Writing and managing stored procedures using SQL commands ", FeatureDataType: "Collection", FeatureCategory: "Stored procedure (UDF)", FeatureParent: "NULL", FeatureSupportedAlternatives: "48", FeatureCriterionValue: ""},] },{id: 35, FeatureID:"",Feature: "Data Manipulation Language (DML)", MoSCoW: "", Description: "", FeatureDataType: "Category", FeatureCategory: "", FeatureParent: "", FeatureSupportedAlternatives: "", FeatureCriterionValue: "", _children: [{id: 636182151269112594,FeatureID:"636182151269112594",Feature: "Data Manipulation Language (DML)", MoSCoW: "", Description: "Data Manipulation Language (DML)", FeatureDataType: "Collection", FeatureCategory: "Data Manipulation Language (DML)", FeatureParent: "NULL", FeatureSupportedAlternatives: "38", FeatureCriterionValue: "", _children: [{id: 636182151679117098,FeatureID:"636182151679117098",Feature: "Delete triggers fired by cascading deletes", MoSCoW: "", Description: "When rows are deleted due to a ON DELETE CASCADE foreign key, are delete triggers fired? ", FeatureDataType: "Boolean", FeatureCategory: "Data Manipulation Language (DML)", FeatureParent: "Data Manipulation Language (DML)", FeatureSupportedAlternatives: "24", FeatureCriterionValue: "" },{id: 636182151677995006,FeatureID:"636182151677995006",Feature: "Dynamic SQL in triggers", MoSCoW: "", Description: "The ability to use dynamic SQL in triggers ", FeatureDataType: "Boolean", FeatureCategory: "Data Manipulation Language (DML)", FeatureParent: "Data Manipulation Language (DML)", FeatureSupportedAlternatives: "8", FeatureCriterionValue: "" },{id: 636182151676552496,FeatureID:"636182151676552496",Feature: "Dynamic SQL in functions", MoSCoW: "", Description: "The ability to use dynamic SQL in stored functions ", FeatureDataType: "Boolean", FeatureCategory: "Data Manipulation Language (DML)", FeatureParent: "Data Manipulation Language (DML)", FeatureSupportedAlternatives: "14", FeatureCriterionValue: "" },{id: 636182151673827414,FeatureID:"636182151673827414",Feature: "Row level triggers", MoSCoW: "", Description: "Triggers that fire once for each row ", FeatureDataType: "Boolean", FeatureCategory: "Data Manipulation Language (DML)", FeatureParent: "Data Manipulation Language (DML)", FeatureSupportedAlternatives: "22", FeatureCriterionValue: "" },{id: 636182151623097184,FeatureID:"636182151623097184",Feature: "Parallel DML", MoSCoW: "", Description: "Ability to execute parallel DML", FeatureDataType: "Boolean", FeatureCategory: "Data Manipulation Language (DML)", FeatureParent: "Data Manipulation Language (DML)", FeatureSupportedAlternatives: "1", FeatureCriterionValue: "" },{id: 636182151622496033,FeatureID:"636182151622496033",Feature: "Multi-version Insert (data Versioning)", MoSCoW: "", Description: "Versioning refers to saving new copies of data when you make changes so that you can go back and retrieve specific versions of it later.", FeatureDataType: "Boolean", FeatureCategory: "Data Manipulation Language (DML)", FeatureParent: "Data Manipulation Language (DML)", FeatureSupportedAlternatives: "21", FeatureCriterionValue: "" },{id: 636182151622138098,FeatureID:"636182151622138098",Feature: "RETURNING clause as a result set", MoSCoW: "", Description: "The ability to return the modified/deleted/inserted rows from a DML statement as a regular result set", FeatureDataType: "Boolean", FeatureCategory: "Data Manipulation Language (DML)", FeatureParent: "Data Manipulation Language (DML)", FeatureSupportedAlternatives: "10", FeatureCriterionValue: "" },{id: 636182151621457610,FeatureID:"636182151621457610",Feature: "SELECT .. FOR UPDATE  NOWAIT", MoSCoW: "", Description: "Select one (or more) rows and lock them for a future update. Fail with an error if the lock cannot be obtained", FeatureDataType: "Boolean", FeatureCategory: "Data Manipulation Language (DML)", FeatureParent: "Data Manipulation Language (DML)", FeatureSupportedAlternatives: "12", FeatureCriterionValue: "" },{id: 636182151617569352,FeatureID:"636182151617569352",Feature: "MERGE support", MoSCoW: "", Description: "Update rows if they exist, insert if not (sometimes also named UPSERT)pdate ro", FeatureDataType: "Boolean", FeatureCategory: "Data Manipulation Language (DML)", FeatureParent: "Data Manipulation Language (DML)", FeatureSupportedAlternatives: "28", FeatureCriterionValue: "" },{id: 636182151614362156,FeatureID:"636182151614362156",Feature: "Use target table in sub-queries", MoSCoW: "", Description: "Use the targe table of an UPDATE, DELETE or INSERT statement in a sub-select", FeatureDataType: "Boolean", FeatureCategory: "Data Manipulation Language (DML)", FeatureParent: "Data Manipulation Language (DML)", FeatureSupportedAlternatives: "23", FeatureCriterionValue: "" },{id: 636182151610515352,FeatureID:"636182151610515352",Feature: "Read consistency during DML operations", MoSCoW: "", Description: "During a DML operation reading a column value should return the value that was valid before the statement started", FeatureDataType: "Boolean", FeatureCategory: "Data Manipulation Language (DML)", FeatureParent: "Data Manipulation Language (DML)", FeatureSupportedAlternatives: "26", FeatureCriterionValue: "" },{id: 636182151609908965,FeatureID:"636182151609908965",Feature: "TRUNCATE table with FK", MoSCoW: "", Description: "Truncate tables that are referenced by other tables", FeatureDataType: "Boolean", FeatureCategory: "Data Manipulation Language (DML)", FeatureParent: "Data Manipulation Language (DML)", FeatureSupportedAlternatives: "7", FeatureCriterionValue: "" },{id: 636182151606746184,FeatureID:"636182151606746184",Feature: "Multi-row INSERTs (Bulk import)", MoSCoW: "", Description: "Insert more than one row with a single INSERT statement", FeatureDataType: "Boolean", FeatureCategory: "Data Manipulation Language (DML)", FeatureParent: "Data Manipulation Language (DML)", FeatureSupportedAlternatives: "25", FeatureCriterionValue: "" },{id: 636182151606025011,FeatureID:"636182151606025011",Feature: "Writeable CTEs", MoSCoW: "", Description: "A common table expression that uses one ore more DML statements", FeatureDataType: "Boolean", FeatureCategory: "Data Manipulation Language (DML)", FeatureParent: "Data Manipulation Language (DML)", FeatureSupportedAlternatives: "9", FeatureCriterionValue: "" },{id: 636182151295870547,FeatureID:"636182151295870547",Feature: "Before triggers", MoSCoW: "", Description: "Triggers that are fired before the changes of a DML statement are persisted ", FeatureDataType: "Boolean", FeatureCategory: "Data Manipulation Language (DML)", FeatureParent: "Data Manipulation Language (DML)", FeatureSupportedAlternatives: "34", FeatureCriterionValue: "" },{id: 636182151292066089,FeatureID:"636182151292066089",Feature: "Statement level triggers", MoSCoW: "", Description: "Triggers that fire once for each statement ", FeatureDataType: "Boolean", FeatureCategory: "Data Manipulation Language (DML)", FeatureParent: "Data Manipulation Language (DML)", FeatureSupportedAlternatives: "34", FeatureCriterionValue: "" },]},] },{id: 36, FeatureID:"",Feature: "Data Definition Language (DDL)", MoSCoW: "", Description: "", FeatureDataType: "Category", FeatureCategory: "", FeatureParent: "", FeatureSupportedAlternatives: "", FeatureCriterionValue: "", _children: [{id: 636182151267516041,FeatureID:"636182151267516041",Feature: "Data Definition Language (DDL)", MoSCoW: "", Description: "Data Definition Language (DDL) ", FeatureDataType: "Collection", FeatureCategory: "Data Definition Language (DDL)", FeatureParent: "NULL", FeatureSupportedAlternatives: "49", FeatureCriterionValue: "", _children: [{id: 636182151646305097,FeatureID:"636182151646305097",Feature: "ALTER a table used in a view", MoSCoW: "", Description: "The ability to ALTER the definition of a table used in a view without dropping the view ", FeatureDataType: "Boolean", FeatureCategory: "Data Definition Language (DDL)", FeatureParent: "Data Definition Language (DDL)", FeatureSupportedAlternatives: "25", FeatureCriterionValue: "" },{id: 636182151642895166,FeatureID:"636182151642895166",Feature: "Custom name for PK constraint", MoSCoW: "", Description: "Specify the name of the PK constraint ", FeatureDataType: "Boolean", FeatureCategory: "Data Definition Language (DDL)", FeatureParent: "Data Definition Language (DDL)", FeatureSupportedAlternatives: "29", FeatureCriterionValue: "" },{id: 636182151642414525,FeatureID:"636182151642414525",Feature: "TRUNCATE Trigger", MoSCoW: "", Description: "Define triggers that are fired when a TRUNCATE statement is executed ", FeatureDataType: "Boolean", FeatureCategory: "Data Definition Language (DDL)", FeatureParent: "Data Definition Language (DDL)", FeatureSupportedAlternatives: "4", FeatureCriterionValue: "" },{id: 636182151640973649,FeatureID:"636182151640973649",Feature: "DDL Triggers", MoSCoW: "", Description: "Define triggers that are fired when a DDL statement is executed ", FeatureDataType: "Boolean", FeatureCategory: "Data Definition Language (DDL)", FeatureParent: "Data Definition Language (DDL)", FeatureSupportedAlternatives: "13", FeatureCriterionValue: "" },{id: 636182151638929693,FeatureID:"636182151638929693",Feature: "Cascading DROP", MoSCoW: "", Description: "Drop a table including incoming foreign keys ", FeatureDataType: "Boolean", FeatureCategory: "Data Definition Language (DDL)", FeatureParent: "Data Definition Language (DDL)", FeatureSupportedAlternatives: "16", FeatureCriterionValue: "" },{id: 636182151637221309,FeatureID:"636182151637221309",Feature: "Partitioning", MoSCoW: "", Description: "After defining partitions, DDL statements can access and manipulate individuals partitions rather than entire tables or indexes. This is how partitioning can simplify the manageability of large database objects. Also, partitioning is entirely transparent to applications.", FeatureDataType: "Boolean", FeatureCategory: "Data Definition Language (DDL)", FeatureParent: "Data Definition Language (DDL)", FeatureSupportedAlternatives: "46", FeatureCriterionValue: "" },{id: 636182151635883449,FeatureID:"636182151635883449",Feature: "Non-blocking index creation", MoSCoW: "", Description: "Create an index without blocking DML on the table ", FeatureDataType: "Boolean", FeatureCategory: "Data Definition Language (DDL)", FeatureParent: "Data Definition Language (DDL)", FeatureSupportedAlternatives: "18", FeatureCriterionValue: "" },{id: 636182151634275448,FeatureID:"636182151634275448",Feature: "Synonyms", MoSCoW: "", Description: "A synonym is an alternative name for objects such as tables, views, sequences, stored procedures, and other database objects. You generally use synonyms when you are granting access to an object from another schema and you don&quot;t want the users to have to worry about knowing which schema owns the object.", FeatureDataType: "Boolean", FeatureCategory: "Data Definition Language (DDL)", FeatureParent: "Data Definition Language (DDL)", FeatureSupportedAlternatives: "16", FeatureCriterionValue: "" },{id: 636182151630151897,FeatureID:"636182151630151897",Feature: "Auto increment columns", MoSCoW: "", Description: "Columns that are populated automatically with unique values without the usage of triggers ", FeatureDataType: "Boolean", FeatureCategory: "Data Definition Language (DDL)", FeatureParent: "Data Definition Language (DDL)", FeatureSupportedAlternatives: "29", FeatureCriterionValue: "" },{id: 636182151627866334,FeatureID:"636182151627866334",Feature: "Sequences", MoSCoW: "", Description: "Sequences allow for automatic generation of sequential non-repeating or repeating integer values for use in keys or elsewhere. Sequences can be positive or negative. Also a number of values can be cached for performance. However, in the case of a database shut down these cached values are lost. If a statement that references a sequence is rolled back that sequence number will be lost.", FeatureDataType: "Boolean", FeatureCategory: "Data Definition Language (DDL)", FeatureParent: "Data Definition Language (DDL)", FeatureSupportedAlternatives: "22", FeatureCriterionValue: "" },{id: 636182151624269214,FeatureID:"636182151624269214",Feature: "Computed columns", MoSCoW: "", Description: "Define a column in a table that is always calculated based on other columns ", FeatureDataType: "Boolean", FeatureCategory: "Data Definition Language (DDL)", FeatureParent: "Data Definition Language (DDL)", FeatureSupportedAlternatives: "21", FeatureCriterionValue: "" },{id: 636182151623277482,FeatureID:"636182151623277482",Feature: "Transactional DDL", MoSCoW: "", Description: "The ability to rollback any DDL statement ", FeatureDataType: "Boolean", FeatureCategory: "Data Definition Language (DDL)", FeatureParent: "Data Definition Language (DDL)", FeatureSupportedAlternatives: "19", FeatureCriterionValue: "" },]},] },{id: 37, FeatureID:"",Feature: "Optimization", MoSCoW: "", Description: "", FeatureDataType: "Category", FeatureCategory: "", FeatureParent: "", FeatureSupportedAlternatives: "", FeatureCriterionValue: "", _children: [{id: 636293703742705599,FeatureID:"636293703742705599",Feature: "Paging", MoSCoW: "", Description: "Paging is a method of writing data to, and reading it from, secondary storage for use in primary storage, also known as main memory. Paging plays a role in memory management for a computer&quot;s operating system.", FeatureDataType: "Boolean", FeatureCategory: "Optimization", FeatureParent: "NULL", FeatureSupportedAlternatives: "54", FeatureCriterionValue: ""},{id: 636182151458690930,FeatureID:"636182151458690930",Feature: "In-memory capabilities", MoSCoW: "", Description: "Some/all parts of the DB structure are held in the memory ", FeatureDataType: "Boolean", FeatureCategory: "Optimization", FeatureParent: "NULL", FeatureSupportedAlternatives: "55", FeatureCriterionValue: ""},{id: 636182151456362006,FeatureID:"636182151456362006",Feature: "Query Optimizer", MoSCoW: "", Description: "Query optimization is a function of many database management systems. The query optimizer attempts to determine the most efficient way to execute a given query by considering the possible query plans.", FeatureDataType: "Boolean", FeatureCategory: "Optimization", FeatureParent: "NULL", FeatureSupportedAlternatives: "48", FeatureCriterionValue: ""},{id: 636182151363476592,FeatureID:"636182151363476592",Feature: "MapReduce", MoSCoW: "", Description: "A MapReduce job usually splits the input data-set into independent chunks which are processed by the map tasks in a completely parallel manner. ", FeatureDataType: "Boolean", FeatureCategory: "Optimization", FeatureParent: "NULL", FeatureSupportedAlternatives: "40", FeatureCriterionValue: ""},{id: 636182151250245314,FeatureID:"636182151250245314",Feature: "Parallel queries", MoSCoW: "", Description: "The ability to distribute a single query over serveral CPUs", FeatureDataType: "Boolean", FeatureCategory: "Optimization", FeatureParent: "NULL", FeatureSupportedAlternatives: "27", FeatureCriterionValue: ""},] },{id: 38, FeatureID:"",Feature: "Date/Time Functions", MoSCoW: "", Description: "", FeatureDataType: "Category", FeatureCategory: "", FeatureParent: "", FeatureSupportedAlternatives: "", FeatureCriterionValue: "", _children: [{id: 636182151248124702,FeatureID:"636182151248124702",Feature: "Date/Time Functions", MoSCoW: "", Description: "Functions for working with data and time ", FeatureDataType: "Collection", FeatureCategory: "Date/Time Functions", FeatureParent: "NULL", FeatureSupportedAlternatives: "58", FeatureCriterionValue: ""},] },{id: 39, FeatureID:"",Feature: "Keys and Identifiers", MoSCoW: "", Description: "", FeatureDataType: "Category", FeatureCategory: "", FeatureParent: "", FeatureSupportedAlternatives: "", FeatureCriterionValue: "", _children: [{id: 636182151247133110,FeatureID:"636182151247133110",Feature: "Foreign Key", MoSCoW: "", Description: "Provides a reference from an entity to anotherone", FeatureDataType: "Boolean", FeatureCategory: "Keys and Identifiers", FeatureParent: "NULL", FeatureSupportedAlternatives: "37", FeatureCriterionValue: ""},{id: 636182151244246869,FeatureID:"636182151244246869",Feature: "Primary key", MoSCoW: "", Description: "used to identify an entity", FeatureDataType: "Boolean", FeatureCategory: "Keys and Identifiers", FeatureParent: "NULL", FeatureSupportedAlternatives: "73", FeatureCriterionValue: ""},] },{id: 40, FeatureID:"",Feature: "Schema", MoSCoW: "", Description: "", FeatureDataType: "Category", FeatureCategory: "", FeatureParent: "", FeatureSupportedAlternatives: "", FeatureCriterionValue: "", _children: [{id: 636182151242461983,FeatureID:"636182151242461983",Feature: "Schema-Free (NoSQL)", MoSCoW: "", Description: "Schema-Free", FeatureDataType: "Boolean", FeatureCategory: "Schema", FeatureParent: "NULL", FeatureSupportedAlternatives: "53", FeatureCriterionValue: ""},{id: 636182151241604681,FeatureID:"636182151241604681",Feature: "Schema-Based", MoSCoW: "", Description: "Schema (Table)", FeatureDataType: "Boolean", FeatureCategory: "Schema", FeatureParent: "NULL", FeatureSupportedAlternatives: "29", FeatureCriterionValue: ""},] },]; DuplicateDataset=JSON.parse((JSON.stringify(FeatureRequirement_datatable)));