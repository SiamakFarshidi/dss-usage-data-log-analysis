var FeatureRequirement_datatable = [ {id: 1, FeatureID:"",Feature: "Software Design Decisions", MoSCoW: "", Description: "", FeatureDataType: "Category", FeatureCategory: "", FeatureParent: "", FeatureSupportedAlternatives: "", FeatureCriterionValue: "", _children: [{id: 637113719893712609,FeatureID:"637113719893712609",Feature: "Software Architecture Patterns", MoSCoW: "", Description: "An architectural pattern is a general, reusable solution to a commonly occurring problem in software architecture within a given context. Architectural patterns are similar to software design patterns but have a broader scope. The architectural patterns address various issues in software engineering, such as computer hardware performance limitations, high availability and minimization of a business risk. Some architectural patterns have been implemented within software frameworks.", FeatureDataType: "Boolean", FeatureCategory: "Software Design Decisions", FeatureParent: "NULL", FeatureSupportedAlternatives: "29", FeatureCriterionValue: ""},{id: 637113719891733744,FeatureID:"637113719891733744",Feature: "Software Architecture Design Patterns", MoSCoW: "", Description: "In software engineering, a design pattern is a general repeatable solution to a commonly occurring problem in software design. A design pattern isn&quot;t a finished design that can be transformed directly into code. It is a description or template for how to solve a problem that can be used in many different situations.", FeatureDataType: "Boolean", FeatureCategory: "Software Design Decisions", FeatureParent: "NULL", FeatureSupportedAlternatives: "31", FeatureCriterionValue: ""},] },{id: 2, FeatureID:"",Feature: "Programming Features", MoSCoW: "", Description: "", FeatureDataType: "Category", FeatureCategory: "", FeatureParent: "", FeatureSupportedAlternatives: "", FeatureCriterionValue: "", _children: [{id: 637113719933223863,FeatureID:"637113719933223863",Feature: "support threading", MoSCoW: "", Description: "A thread in computer science is short for a thread of execution. Threads are a way for a program to divide (termed &quot;split&quot;) itself into two or more simultaneously (or pseudo-simultaneously) running tasks. Threads and processes differ from one operating system to another but, in general, a thread is contained inside a process and different threads in the same process share same resources while different processes in the same multitasking operating system do not. Threads are lightweight, in terms of the system resources they consume, as compared with processes.", FeatureDataType: "Boolean", FeatureCategory: "Programming Features", FeatureParent: "NULL", FeatureSupportedAlternatives: "45", FeatureCriterionValue: ""},{id: 637113719888475622,FeatureID:"637113719888475622",Feature: "socket programming", MoSCoW: "", Description: "Socket programming is a way of connecting two nodes on a network to communicate with each other. One socket(node) listens on a particular port at an IP, while other socket reaches out to the other to form a connection. Server forms the listener socket while client reaches out to the server.", FeatureDataType: "Boolean", FeatureCategory: "Programming Features", FeatureParent: "NULL", FeatureSupportedAlternatives: "37", FeatureCriterionValue: ""},] },{id: 3, FeatureID:"",Feature: "Ownership", MoSCoW: "", Description: "", FeatureDataType: "Category", FeatureCategory: "", FeatureParent: "", FeatureSupportedAlternatives: "", FeatureCriterionValue: "", _children: [{id: 637113719765588242,FeatureID:"637113719765588242",Feature: "Open source", MoSCoW: "", Description: "Open source is a term denoting that a product includes permission to use its source code, design documents, or content. It most commonly refers to the open-source model, in which open-source software or other products are released under an open-source license as part of the open-source-software movement. Use of the term originated with software, but has expanded beyond the software sector to cover other open content and forms of open collaboration.", FeatureDataType: "Boolean", FeatureCategory: "Ownership", FeatureParent: "NULL", FeatureSupportedAlternatives: "37", FeatureCriterionValue: ""},{id: 637113719677329481,FeatureID:"637113719677329481",Feature: "Licensed", MoSCoW: "", Description: "A software license is a legal instrument (usually by way of contract law, with or without printed material) governing the use or redistribution of software. Under United States copyright law, all software is copyright protected, in both source code and object code forms.", FeatureDataType: "Boolean", FeatureCategory: "Ownership", FeatureParent: "NULL", FeatureSupportedAlternatives: "44", FeatureCriterionValue: ""},] },{id: 4, FeatureID:"",Feature: "Cost", MoSCoW: "", Description: "", FeatureDataType: "Category", FeatureCategory: "", FeatureParent: "", FeatureSupportedAlternatives: "", FeatureCriterionValue: "", _children: [{id: 637113719768836400,FeatureID:"637113719768836400",Feature: "Open source compiler / interpreter ", MoSCoW: "", Description: "Open source compiler/interpreter", FeatureDataType: "Boolean", FeatureCategory: "Cost", FeatureParent: "NULL", FeatureSupportedAlternatives: "37", FeatureCriterionValue: ""},{id: 637113719541634987,FeatureID:"637113719541634987",Feature: "Free implementation of the core libraries", MoSCoW: "", Description: "Free implementation of the core libraries", FeatureDataType: "Boolean", FeatureCategory: "Cost", FeatureParent: "NULL", FeatureSupportedAlternatives: "44", FeatureCriterionValue: ""},] },{id: 5, FeatureID:"",Feature: "Language Syntax", MoSCoW: "", Description: "", FeatureDataType: "Category", FeatureCategory: "", FeatureParent: "", FeatureSupportedAlternatives: "", FeatureCriterionValue: "", _children: [{id: 637113719882378958,FeatureID:"637113719882378958",Feature: "simple and concise syntax", MoSCoW: "Should-Have", Description: "simple and concise syntax", FeatureDataType: "Numeric", FeatureCategory: "Language Syntax", FeatureParent: "NULL", FeatureSupportedAlternatives: "47", FeatureCriterionValue: "Average"},{id: 637113719869236467,FeatureID:"637113719869236467",Feature: "self-documenting (or self-describing) syntax", MoSCoW: "", Description: "Commonly stated objectives for self-documenting systems include: Make source code easier to read and understand. Minimize the effort required to maintain or extend legacy systems. Reduce the need for users and developers of a system to consult secondary documentation sources such as code comments or software manuals.", FeatureDataType: "Numeric", FeatureCategory: "Language Syntax", FeatureParent: "NULL", FeatureSupportedAlternatives: "47", FeatureCriterionValue: "None"},{id: 637113719501611573,FeatureID:"637113719501611573",Feature: "easy to write new code", MoSCoW: "", Description: "easy to write new code", FeatureDataType: "Numeric", FeatureCategory: "Language Syntax", FeatureParent: "NULL", FeatureSupportedAlternatives: "47", FeatureCriterionValue: "None"},{id: 637113719496754348,FeatureID:"637113719496754348",Feature: "easy to reuse existing code", MoSCoW: "", Description: "easy to reuse existing code", FeatureDataType: "Numeric", FeatureCategory: "Language Syntax", FeatureParent: "NULL", FeatureSupportedAlternatives: "47", FeatureCriterionValue: "None"},{id: 637113719490729173,FeatureID:"637113719490729173",Feature: "easy to read existing code", MoSCoW: "", Description: "easy to read existing code", FeatureDataType: "Numeric", FeatureCategory: "Language Syntax", FeatureParent: "NULL", FeatureSupportedAlternatives: "47", FeatureCriterionValue: "None"},] },{id: 6, FeatureID:"",Feature: "Programming Domain", MoSCoW: "", Description: "", FeatureDataType: "Category", FeatureCategory: "", FeatureParent: "", FeatureSupportedAlternatives: "", FeatureCriterionValue: "", _children: [{id: 637113719581940041,FeatureID:"637113719581940041",Feature: "General-Purpose PL", MoSCoW: "Should-Have", Description: "In computer software, a general-purpose programming language is a programming language designed to be used for writing software in the widest variety of application domains (a general-purpose language). A general-purpose programming language has this status because it does not include language constructs designed to be used within a specific application domain.", FeatureDataType: "Boolean", FeatureCategory: "Programming Domain", FeatureParent: "NULL", FeatureSupportedAlternatives: "30", FeatureCriterionValue: ""},{id: 637113719480518783,FeatureID:"637113719480518783",Feature: "Domain-Specific PL", MoSCoW: "", Description: "A domain-specific language (DSL) is a computer language specialized to a particular application domain. This is in contrast to a general-purpose language (GPL), which is broadly applicable across domains. There are a wide variety of DSLs, ranging from widely used languages for common domains, such as HTML for web pages, down to languages used by only one or a few pieces of software, such as MUSH soft code. DSLs can be further subdivided by the kind of language, and include domain-specific markup languages, domain-specific modeling languages (more generally, specification languages), and domain-specific programming languages. Special-purpose computer languages have always existed in the computer age, but the term &quot;domain-specific language&quot; has become more popular due to the rise of domain-specific modeling. Simpler DSLs, particularly ones used by a single application, are sometimes informally called mini-languages.", FeatureDataType: "Boolean", FeatureCategory: "Programming Domain", FeatureParent: "NULL", FeatureSupportedAlternatives: "17", FeatureCriterionValue: ""},] },{id: 7, FeatureID:"",Feature: "Application Domain", MoSCoW: "", Description: "", FeatureDataType: "Category", FeatureCategory: "", FeatureParent: "", FeatureSupportedAlternatives: "", FeatureCriterionValue: "", _children: [{id: 637113719974956210,FeatureID:"637113719974956210",Feature: "Web Applications / Services", MoSCoW: "Should-Have", Description: "Web Applications / Services", FeatureDataType: "Boolean", FeatureCategory: "Application Domain", FeatureParent: "NULL", FeatureSupportedAlternatives: "38", FeatureCriterionValue: "", _children: [{id: 637113719989068356,FeatureID:"637113719989068356",Feature: "Web-Based Systems", MoSCoW: "", Description: "The web-based systems in this sample were generally limited to the server side. Key quality attributes would include performance, extensibility, security, and availability.", FeatureDataType: "Boolean", FeatureCategory: "Application Domain", FeatureParent: "Web Applications / Services", FeatureSupportedAlternatives: "32", FeatureCriterionValue: "" },{id: 637113719979313716,FeatureID:"637113719979313716",Feature: "Web Services", MoSCoW: "", Description: "The term Web services describes a standardized way of integrating Web-based applications using the XML, SOAP, WSDL and UDDI open standards over an Internet protocol backbone. Developers can then add the Web service to a GUI (such as a Web page or an executable program) to offer specific functionality to users.", FeatureDataType: "Boolean", FeatureCategory: "Application Domain", FeatureParent: "Web Applications / Services", FeatureSupportedAlternatives: "22", FeatureCriterionValue: "" },{id: 637113719874453485,FeatureID:"637113719874453485",Feature: "Service-Based Systems", MoSCoW: "", Description: "Service-oriented architecture (SOA) is a software development model for distributed application components that incorporates discovery, access control, data mapping and security features.", FeatureDataType: "Boolean", FeatureCategory: "Application Domain", FeatureParent: "Web Applications / Services", FeatureSupportedAlternatives: "33", FeatureCriterionValue: "" },]},{id: 637113719963712642,FeatureID:"637113719963712642",Feature: "Transaction Processing", MoSCoW: "Could-Have", Description: "Transaction Processing", FeatureDataType: "Boolean", FeatureCategory: "Application Domain", FeatureParent: "NULL", FeatureSupportedAlternatives: "21", FeatureCriterionValue: "", _children: [{id: 637113719318325152,FeatureID:"637113719318325152",Feature: "Banking System", MoSCoW: "", Description: "A banking system is a group or network of institutions that provide financial services for us. These institutions are responsible for operating a payment system, providing loans, taking deposits, and helping with investments.", FeatureDataType: "Boolean", FeatureCategory: "Application Domain", FeatureParent: "Transaction Processing", FeatureSupportedAlternatives: "21", FeatureCriterionValue: "" },]},{id: 637113719936092223,FeatureID:"637113719936092223",Feature: "Systems Software", MoSCoW: "", Description: "Systems Software", FeatureDataType: "Boolean", FeatureCategory: "Application Domain", FeatureParent: "NULL", FeatureSupportedAlternatives: "25", FeatureCriterionValue: "", _children: [{id: 637113719791923200,FeatureID:"637113719791923200",Feature: "Plug-and-Play Environment", MoSCoW: "", Description: "A plug and play (PnP) device or computer bus, is one with a specification that facilitates the discovery of a hardware component in a system without the need for physical device configuration or user intervention in resolving resource conflicts.[1][2] The term &quot;plug and play&quot; has since been expanded to a wide variety of applications to which the same lack of user setup applies.", FeatureDataType: "Boolean", FeatureCategory: "Application Domain", FeatureParent: "Systems Software", FeatureSupportedAlternatives: "8", FeatureCriterionValue: "" },{id: 637113719771874665,FeatureID:"637113719771874665",Feature: "Operating Systems", MoSCoW: "", Description: "An operating system (OS) is system software that manages computer hardware and software resources and provides common services for computer programs.", FeatureDataType: "Boolean", FeatureCategory: "Application Domain", FeatureParent: "Systems Software", FeatureSupportedAlternatives: "12", FeatureCriterionValue: "" },{id: 637113719745409764,FeatureID:"637113719745409764",Feature: "Network and Communication Systems", MoSCoW: "", Description: "A communications system is a collection of individual communications networks, transmission systems, relay stations, tributary stations, and data terminal equipment (DTE) usually capable of interconnection and interoperation to form an integrated whole.", FeatureDataType: "Boolean", FeatureCategory: "Application Domain", FeatureParent: "Systems Software", FeatureSupportedAlternatives: "18", FeatureCriterionValue: "" },{id: 637113719740752426,FeatureID:"637113719740752426",Feature: "Multi-Processors Environment", MoSCoW: "", Description: "Multiprocessing is the use of two or more central processing units (CPUs) within a single computer system.The term also refers to the ability of a system to support more than one processor or the ability to allocate tasks between them. There are many variations on this basic theme, and the definition of multiprocessing can vary with context, mostly as a function of how CPUs are defined (multiple cores on one die, multiple dies in one package, multiple packages in one system unit, etc.).", FeatureDataType: "Boolean", FeatureCategory: "Application Domain", FeatureParent: "Systems Software", FeatureSupportedAlternatives: "9", FeatureCriterionValue: "" },]},{id: 637113719641969678,FeatureID:"637113719641969678",Feature: "Information Management and Decision Support Systems", MoSCoW: "", Description: "Strategic and Operations Analysis", FeatureDataType: "Boolean", FeatureCategory: "Application Domain", FeatureParent: "NULL", FeatureSupportedAlternatives: "25", FeatureCriterionValue: "", _children: [{id: 637113719696248671,FeatureID:"637113719696248671",Feature: "Management Information Systems", MoSCoW: "", Description: "A management information system (MIS) is an information system used for decision-making, and for the coordination, control, analysis, and visualization of information in an organization. The study of management information systems examines people, processes and technology in an organizational context. In a corporate setting, the ultimate goal of the use of a management information system is to increase the value and profits of the business.", FeatureDataType: "Boolean", FeatureCategory: "Application Domain", FeatureParent: "Information Management and Decision Support Systems", FeatureSupportedAlternatives: "16", FeatureCriterionValue: "" },{id: 637113719523079313,FeatureID:"637113719523079313",Feature: "Expert System", MoSCoW: "", Description: "An expert system is a computer system that emulates the decision-making ability of a human expert. Expert systems are designed to solve complex problems by reasoning through bodies of knowledge, represented mainly as if�then rules rather than through conventional procedural code.", FeatureDataType: "Boolean", FeatureCategory: "Application Domain", FeatureParent: "Information Management and Decision Support Systems", FeatureSupportedAlternatives: "16", FeatureCriterionValue: "" },]},{id: 637113719567020494,FeatureID:"637113719567020494",Feature: "Games / Entertainment", MoSCoW: "", Description: "Transaction Processing", FeatureDataType: "Boolean", FeatureCategory: "Application Domain", FeatureParent: "NULL", FeatureSupportedAlternatives: "18", FeatureCriterionValue: "", _children: [{id: 637113719570248646,FeatureID:"637113719570248646",Feature: "Gaming Systems", MoSCoW: "", Description: "Games / Entertainment", FeatureDataType: "Boolean", FeatureCategory: "Application Domain", FeatureParent: "Games / Entertainment", FeatureSupportedAlternatives: "18", FeatureCriterionValue: "" },]},{id: 637113719431659755,FeatureID:"637113719431659755",Feature: "Distributed Computing", MoSCoW: "", Description: "Distributed Computing", FeatureDataType: "Boolean", FeatureCategory: "Application Domain", FeatureParent: "NULL", FeatureSupportedAlternatives: "36", FeatureCriterionValue: "", _children: [{id: 637113719736205017,FeatureID:"637113719736205017",Feature: "Mobile Applications", MoSCoW: "", Description: "A mobile application, most commonly referred to as an app, is a type of application software designed to run on a mobile device, such as a smartphone or tablet computer. Mobile applications frequently serve to provide users with similar services to those accessed on PCs.", FeatureDataType: "Boolean", FeatureCategory: "Application Domain", FeatureParent: "Distributed Computing", FeatureSupportedAlternatives: "31", FeatureCriterionValue: "" },{id: 637113719453098851,FeatureID:"637113719453098851",Feature: "Distributed Systems", MoSCoW: "", Description: "A distributed system is a network that consists of autonomous computers that are connected using a distribution middleware. They help in sharing different resources and capabilities to provide users with a single and integrated coherent network.", FeatureDataType: "Boolean", FeatureCategory: "Application Domain", FeatureParent: "Distributed Computing", FeatureSupportedAlternatives: "14", FeatureCriterionValue: "" },{id: 637113719330615981,FeatureID:"637113719330615981",Feature: "Cloud Computing Applications", MoSCoW: "", Description: "Cloud computing is a technology that uses the internet and central remote servers to maintain data and applications. Cloud computing allows consumers and businesses to use applications without installation and access their personal files at any computer with internet access.", FeatureDataType: "Boolean", FeatureCategory: "Application Domain", FeatureParent: "Distributed Computing", FeatureSupportedAlternatives: "17", FeatureCriterionValue: "" },]},{id: 637113719423157125,FeatureID:"637113719423157125",Feature: "Design and Engineering Software", MoSCoW: "", Description: "Design and Engineering Software", FeatureDataType: "Boolean", FeatureCategory: "Application Domain", FeatureParent: "NULL", FeatureSupportedAlternatives: "40", FeatureCriterionValue: "", _children: [{id: 637113719645517648,FeatureID:"637113719645517648",Feature: "Interactive System", MoSCoW: "", Description: "Interactive systems are computer systems characterized by significant amounts of interaction between humans and the computer. Most users have grown up using Macintosh or Windows computer operating systems, which are prime examples of graphical interactive systems.", FeatureDataType: "Boolean", FeatureCategory: "Application Domain", FeatureParent: "Design and Engineering Software", FeatureSupportedAlternatives: "38", FeatureCriterionValue: "" },{id: 637113719397638271,FeatureID:"637113719397638271",Feature: "Data Base Systems", MoSCoW: "", Description: "A Database Management System (DBMS) is a system (software) that provides an interface to database for information storage and retrieval. We are more interested in software systems rather than manual systems because they can do the job more efficiently. The common features of a DBMS includes.", FeatureDataType: "Boolean", FeatureCategory: "Application Domain", FeatureParent: "Design and Engineering Software", FeatureSupportedAlternatives: "14", FeatureCriterionValue: "" },{id: 637113719353327732,FeatureID:"637113719353327732",Feature: "Compiler Design", MoSCoW: "", Description: "Compiler design covers basic translation mechanism and error detection & recovery. It includes lexical, syntax, and semantic analysis as front end, and code generation and optimization as back-end.", FeatureDataType: "Boolean", FeatureCategory: "Application Domain", FeatureParent: "Design and Engineering Software", FeatureSupportedAlternatives: "15", FeatureCriterionValue: "" },{id: 637113719346961387,FeatureID:"637113719346961387",Feature: "Commercial-Off-The-Shelf (Cots)", MoSCoW: "", Description: "Short for commercial off-the-shelf, an adjective that describes software or hardware products that are ready-made and available for sale to the general public. For example, Microsoft Office is a COTS product that is a packaged software solution for businesses.", FeatureDataType: "Boolean", FeatureCategory: "Application Domain", FeatureParent: "Design and Engineering Software", FeatureSupportedAlternatives: "4", FeatureCriterionValue: "" },{id: 637113719324156958,FeatureID:"637113719324156958",Feature: "Case & Related Developer Tools", MoSCoW: "", Description: "Our sample included only four such systems.", FeatureDataType: "Boolean", FeatureCategory: "Application Domain", FeatureParent: "Design and Engineering Software", FeatureSupportedAlternatives: "2", FeatureCriterionValue: "" },]},{id: 637113719402255630,FeatureID:"637113719402255630",Feature: "Data-Dominant Software", MoSCoW: "", Description: "Data-Dominant Software", FeatureDataType: "Boolean", FeatureCategory: "Application Domain", FeatureParent: "NULL", FeatureSupportedAlternatives: "23", FeatureCriterionValue: "", _children: [{id: 637113719526507362,FeatureID:"637113719526507362",Feature: "File-Sharing Applications", MoSCoW: "", Description: "A file-sharing application is a software application that facilitates collaboration and file transfer. File-sharing applications allow end users to upload files to a shared storage space and designate who may access the files. Workplace file sharing applications fall into two major groups: consumer and business grade.", FeatureDataType: "Boolean", FeatureCategory: "Application Domain", FeatureParent: "Data-Dominant Software", FeatureSupportedAlternatives: "15", FeatureCriterionValue: "" },{id: 637113719519101577,FeatureID:"637113719519101577",Feature: "Exchange Data And Information", MoSCoW: "", Description: "Data exchange is the process of taking data structured under a source schema and transforming it into data structured under a target schema, so that the target data is an accurate representation of the source data. Data exchange allows data to be shared between different computer programs.", FeatureDataType: "Boolean", FeatureCategory: "Application Domain", FeatureParent: "Data-Dominant Software", FeatureSupportedAlternatives: "13", FeatureCriterionValue: "" },]},{id: 637113719385363257,FeatureID:"637113719385363257",Feature: "Control-Dominant Software", MoSCoW: "", Description: "Control-Dominant Software", FeatureDataType: "Boolean", FeatureCategory: "Application Domain", FeatureParent: "NULL", FeatureSupportedAlternatives: "25", FeatureCriterionValue: "", _children: [{id: 637113719844250293,FeatureID:"637113719844250293",Feature: "Real-Time Systems", MoSCoW: "", Description: "A real time system is a time bound system which has well defined fixed time constraints. Processing must be done within the defined constraints or the system will fail. They either are event driven or time sharing.", FeatureDataType: "Boolean", FeatureCategory: "Application Domain", FeatureParent: "Control-Dominant Software", FeatureSupportedAlternatives: "11", FeatureCriterionValue: "" },{id: 637113719649115598,FeatureID:"637113719649115598",Feature: "Internet Of Things (Iots)", MoSCoW: "", Description: "The internet of things, or IoT, is a system of interrelated computing devices, mechanical and digital machines, objects, animals or people that are provided with unique identifiers (UIDs) and the ability to transfer data over a network without requiring human-to-human or human-to-computer interaction.", FeatureDataType: "Boolean", FeatureCategory: "Application Domain", FeatureParent: "Control-Dominant Software", FeatureSupportedAlternatives: "19", FeatureCriterionValue: "" },{id: 637113719507748072,FeatureID:"637113719507748072",Feature: "Embedded Systems", MoSCoW: "", Description: "Embedded systems often have important realtime constraints. In addition, they usually have limited resources such as memory and external storage.", FeatureDataType: "Boolean", FeatureCategory: "Application Domain", FeatureParent: "Control-Dominant Software", FeatureSupportedAlternatives: "16", FeatureCriterionValue: "" },]},{id: 637113719366071224,FeatureID:"637113719366071224",Feature: "Computation-Dominant Software", MoSCoW: "", Description: "Computation-Dominant Software", FeatureDataType: "Boolean", FeatureCategory: "Application Domain", FeatureParent: "NULL", FeatureSupportedAlternatives: "16", FeatureCriterionValue: "", _children: [{id: 637113719895721469,FeatureID:"637113719895721469",Feature: "Speech Recognition", MoSCoW: "", Description: "Speech recognition is the ability of a machine or program to identify words and phrases in spoken language and convert them to a machine-readable format. Rudimentary speech recognition software has a limited vocabulary of words and phrases, and it may only identify these if they are spoken very clearly.", FeatureDataType: "Boolean", FeatureCategory: "Application Domain", FeatureParent: "Computation-Dominant Software", FeatureSupportedAlternatives: "12", FeatureCriterionValue: "" },{id: 637113719878291294,FeatureID:"637113719878291294",Feature: "Signal Processing", MoSCoW: "", Description: "Digital signal processing (DSP) is the process of analyzing and modifying a signal to optimize or improve its efficiency or performance. It involves applying various mathematical and computational algorithms to analog and digital signals to produce a signal that&quot;s of higher quality than the original signal.", FeatureDataType: "Boolean", FeatureCategory: "Application Domain", FeatureParent: "Computation-Dominant Software", FeatureSupportedAlternatives: "7", FeatureCriterionValue: "" },{id: 637113719787705614,FeatureID:"637113719787705614",Feature: "Pattern Recognition", MoSCoW: "", Description: "Pattern recognition is the process of recognizing patterns by using machine learning algorithm. Pattern recognition can be defined as the classification of data based on knowledge already gained or on statistical information extracted from patterns and/or their representation.", FeatureDataType: "Boolean", FeatureCategory: "Application Domain", FeatureParent: "Computation-Dominant Software", FeatureSupportedAlternatives: "3", FeatureCriterionValue: "" },]},] },{id: 8, FeatureID:"",Feature: "Development Tools", MoSCoW: "", Description: "", FeatureDataType: "Category", FeatureCategory: "", FeatureParent: "", FeatureSupportedAlternatives: "", FeatureCriterionValue: "", _children: [{id: 637113719947985439,FeatureID:"637113719947985439",Feature: "Toolchain", MoSCoW: "", Description: "In software, a toolchain is a set of programming tools that is used to perform a complex software development task or to create a software product, which is typically another computer program or a set of related programs. In general, the tools forming a toolchain are executed consecutively so the output or resulting environment state of each tool becomes the input or starting environment for the next one, but the term is also used when referring to a set of related tools that are not necessarily executed consecutively.", FeatureDataType: "Boolean", FeatureCategory: "Development Tools", FeatureParent: "NULL", FeatureSupportedAlternatives: "22", FeatureCriterionValue: ""},{id: 637113719940529700,FeatureID:"637113719940529700",Feature: "Testing tools", MoSCoW: "", Description: "Tools from a software testing context can be defined as a product that supports one or more test activities right from planning, requirements, creating a build, test execution, defect logging and test analysis.", FeatureDataType: "Boolean", FeatureCategory: "Development Tools", FeatureParent: "NULL", FeatureSupportedAlternatives: "42", FeatureCriterionValue: ""},{id: 637113719906949465,FeatureID:"637113719906949465",Feature: "Static code analysis", MoSCoW: "", Description: "Static program analysis is the analysis of computer software that is performed without actually executing programs, in contrast with dynamic analysis, which is analysis performed on programs while they are executing. In most cases the analysis is performed on some version of the source code, and in the other cases, some form of the object code.", FeatureDataType: "Boolean", FeatureCategory: "Development Tools", FeatureParent: "NULL", FeatureSupportedAlternatives: "40", FeatureCriterionValue: ""},{id: 637113719826880017,FeatureID:"637113719826880017",Feature: "Profiler", MoSCoW: "", Description: "profiling (&quot;program profiling&quot;, &quot;software profiling&quot;) is a form of dynamic program analysis that measures, for example, the space (memory) or time complexity of a program, the usage of particular instructions, or the frequency and duration of function calls. Most commonly, profiling information serves to aid program optimization. Profiling is achieved by instrumenting either the program source code or its binary executable form using a tool called a profiler (or code profiler). Profilers may use a number of different techniques, such as event-based, statistical, instrumented, and simulation methods.", FeatureDataType: "Boolean", FeatureCategory: "Development Tools", FeatureParent: "NULL", FeatureSupportedAlternatives: "31", FeatureCriterionValue: ""},{id: 637113719781878947,FeatureID:"637113719781878947",Feature: "Package Manager", MoSCoW: "", Description: "A package manager or package-management system is a collection of software tools that automates the process of installing, upgrading, configuring, and removing computer programs for a computer&quot;s operating system in a consistent manner.", FeatureDataType: "Boolean", FeatureCategory: "Development Tools", FeatureParent: "NULL", FeatureSupportedAlternatives: "40", FeatureCriterionValue: ""},{id: 637113719775892356,FeatureID:"637113719775892356",Feature: "ORM", MoSCoW: "", Description: "Object-relational mapping (ORM, O/RM, and O/R mapping tool) in computer science is a programming technique for converting data between incompatible type systems using object-oriented programming languages.", FeatureDataType: "Boolean", FeatureCategory: "Development Tools", FeatureParent: "NULL", FeatureSupportedAlternatives: "12", FeatureCriterionValue: ""},{id: 637113719612940068,FeatureID:"637113719612940068",Feature: "GUI builder", MoSCoW: "", Description: "A graphical user interface builder (or GUI builder), also known as GUI designer, is a software development tool that simplifies the creation of GUIs by allowing the designer to arrange graphical control elements (often called widgets) using a drag-and-drop WYSIWYG editor. Without a GUI builder, a GUI must be built by manually specifying each widget&quot;s parameters in source-code, with no visual feedback until the program is run.", FeatureDataType: "Boolean", FeatureCategory: "Development Tools", FeatureParent: "NULL", FeatureSupportedAlternatives: "37", FeatureCriterionValue: ""},{id: 637113719412243375,FeatureID:"637113719412243375",Feature: "Debugger", MoSCoW: "", Description: "A debugger or debugging tool is a computer program that is used to test and debug other programs (the &quot;target&quot; program). The code to be examined might alternatively be running on an instruction set simulator (ISS), a technique that allows great power in its ability to halt when specific conditions are encountered, but which will typically be somewhat slower than executing the code directly on the appropriate (or the same) processor. Some debuggers offer two modes of operation, full or partial simulation, to limit this impact.", FeatureDataType: "Boolean", FeatureCategory: "Development Tools", FeatureParent: "NULL", FeatureSupportedAlternatives: "44", FeatureCriterionValue: ""},{id: 637113719341419145,FeatureID:"637113719341419145",Feature: "Code refactoring", MoSCoW: "", Description: "Code refactoring is the process of restructuring existing computer code�changing the factoring�without changing its external behavior. Refactoring is intended to improve nonfunctional attributes of the software. Advantages include improved code readability and reduced complexity; these can improve source-code maintainability and create a more expressive internal architecture or object model to improve extensibility.", FeatureDataType: "Boolean", FeatureCategory: "Development Tools", FeatureParent: "NULL", FeatureSupportedAlternatives: "36", FeatureCriterionValue: ""},{id: 637113719333544293,FeatureID:"637113719333544293",Feature: "Code coverage", MoSCoW: "", Description: "Code coverage is a term used in software testing to describe how much program source code is covered by a testing plan. Developers look at the number of program subroutines and lines of code that are covered by a set of testing resources and techniques. Code coverage is also known as test coverage.", FeatureDataType: "Boolean", FeatureCategory: "Development Tools", FeatureParent: "NULL", FeatureSupportedAlternatives: "36", FeatureCriterionValue: ""},] },{id: 9, FeatureID:"",Feature: "Processor", MoSCoW: "", Description: "", FeatureDataType: "Category", FeatureCategory: "", FeatureParent: "", FeatureSupportedAlternatives: "", FeatureCriterionValue: "", _children: [{id: 637113719653093325,FeatureID:"637113719653093325",Feature: "Interpreter", MoSCoW: "", Description: "An interpreter is a computer program that directly executes instructions written in a programming or scripting language, without requiring them previously to have been compiled into a machine language program.", FeatureDataType: "Boolean", FeatureCategory: "Processor", FeatureParent: "NULL", FeatureSupportedAlternatives: "19", FeatureCriterionValue: ""},{id: 637113719350249504,FeatureID:"637113719350249504",Feature: "Compiler", MoSCoW: "", Description: "A compiler is a computer program that translates computer code written in one programming language into another language. The name compiler is primarily used for programs that translate source code from a high-level programming language to a lower level language to create an executable program.", FeatureDataType: "Boolean", FeatureCategory: "Processor", FeatureParent: "NULL", FeatureSupportedAlternatives: "29", FeatureCriterionValue: ""},{id: 637113719321398527,FeatureID:"637113719321398527",Feature: "Bytecode", MoSCoW: "", Description: "Bytecode languages are a type of programming language that fall under the categories of both compiled and interpreted languages because they employ both compilation and interpretation to execute code", FeatureDataType: "Boolean", FeatureCategory: "Processor", FeatureParent: "NULL", FeatureSupportedAlternatives: "9", FeatureCriterionValue: ""},] },{id: 10, FeatureID:"",Feature: "Development stack", MoSCoW: "", Description: "", FeatureDataType: "Category", FeatureCategory: "", FeatureParent: "", FeatureSupportedAlternatives: "", FeatureCriterionValue: "", _children: [{id: 637113719551619287,FeatureID:"637113719551619287",Feature: "Full-stack", MoSCoW: "", Description: "Full stack web developers: Are familiar with HTML, CSS, JavaScript, and one or more back end languages. Most full stack developers specialize in a particular back end programming language, like Ruby or PHP or Python, although some, especially if they&quot;ve been working as a developer for a while, work with more than one.", FeatureDataType: "Boolean", FeatureCategory: "Development stack", FeatureParent: "NULL", FeatureSupportedAlternatives: "30", FeatureCriterionValue: ""},{id: 637113719544163552,FeatureID:"637113719544163552",Feature: "Front-end", MoSCoW: "", Description: "Front-end web development, also known as client-side development is the practice of producing HTML, CSS and JavaScript for a website or Web Application so that a user can see and interact with them directly.", FeatureDataType: "Boolean", FeatureCategory: "Development stack", FeatureParent: "NULL", FeatureSupportedAlternatives: "32", FeatureCriterionValue: ""},{id: 637113719306934595,FeatureID:"637113719306934595",Feature: "Back-end", MoSCoW: "", Description: "The back end refers to parts of a computer application or a program&quot;s code that allow it to operate and that cannot be accessed by a user. Most data and operating syntax are stored and accessed in the back end of a computer system. Typically the code is comprised of one or more programming languages.", FeatureDataType: "Boolean", FeatureCategory: "Development stack", FeatureParent: "NULL", FeatureSupportedAlternatives: "45", FeatureCriterionValue: ""},] },{id: 11, FeatureID:"",Feature: "Programming paradigms", MoSCoW: "", Description: "", FeatureDataType: "Category", FeatureCategory: "", FeatureParent: "", FeatureSupportedAlternatives: "", FeatureCriterionValue: "", _children: [{id: 637113719848068116,FeatureID:"637113719848068116",Feature: "Reflective programming", MoSCoW: "", Description: "Reflective Programming is that you reflect upon/inspect the code at run time. Which means �ou are not aware of the actual name of the method or the field in the class but you can enumerate what are the fields or methods available for a given class and then invoke which ever you want to from the enumerated list.", FeatureDataType: "Boolean", FeatureCategory: "Programming paradigms", FeatureParent: "NULL", FeatureSupportedAlternatives: "19", FeatureCriterionValue: ""},{id: 637113719810272729,FeatureID:"637113719810272729",Feature: "Procedural programming", MoSCoW: "", Description: "Procedural programming is a programming paradigm, derived from structured programming,[citation needed] based on the concept of the procedure call. Procedures, also known as routines, subroutines, or functions, simply contain a series of computational steps to be carried out. Any given procedure might be called at any point during a program&quot;s execution, including by other procedures or itself.", FeatureDataType: "Boolean", FeatureCategory: "Programming paradigms", FeatureParent: "NULL", FeatureSupportedAlternatives: "30", FeatureCriterionValue: ""},{id: 637113719801827546,FeatureID:"637113719801827546",Feature: "Probabilistic programming", MoSCoW: "", Description: "Probabilistic programming (PP) is a programming paradigm in which probabilistic models are specified and inference for these models is performed automatically. It represents an attempt to unify probabilistic modeling and traditional general purpose programming in order to make the former easier and more widely applicable. It can be used to create systems that help make decisions in the face of uncertainty.", FeatureDataType: "Boolean", FeatureCategory: "Programming paradigms", FeatureParent: "NULL", FeatureSupportedAlternatives: "14", FeatureCriterionValue: ""},{id: 637113719756833239,FeatureID:"637113719756833239",Feature: "Object-oriented programming (OOP)", MoSCoW: "", Description: "Object-oriented programming (OOP) is a programming paradigm based on the concept of &quot;objects&quot;, which can contain data, in the form of fields (often known as attributes), and code, in the form of procedures (often known as methods). A feature of objects is an object&quot;s procedures that can access and often modify the data fields of the object with which they are associated (objects have a notion of &quot;this&quot; or &quot;self&quot;). In OOP, computer programs are designed by making them out of objects that interact with one another.", FeatureDataType: "Boolean", FeatureCategory: "Programming paradigms", FeatureParent: "NULL", FeatureSupportedAlternatives: "32", FeatureCriterionValue: ""},{id: 637113719749547400,FeatureID:"637113719749547400",Feature: "Non-structured programming", MoSCoW: "", Description: "Non-structured programming is the historically earliest programming paradigm capable of creating Turing-complete algorithms. It is often contrasted with the structured programming paradigm, in particular with the use of unstructured control flow using goto statements or equivalent.", FeatureDataType: "Boolean", FeatureCategory: "Programming paradigms", FeatureParent: "NULL", FeatureSupportedAlternatives: "3", FeatureCriterionValue: ""},{id: 637113719705743269,FeatureID:"637113719705743269",Feature: "Metaprogramming", MoSCoW: "", Description: "Metaprogramming is a programming technique in which computer programs have the ability to treat other programs as their data. It means that a program can be designed to read, generate, analyze or transform other programs, and even modify itself while running. In some cases, this allows programmers to minimize the number of lines of code to express a solution, in turn reducing development time. It also allows programs greater flexibility to efficiently handle new situations without recompilation.", FeatureDataType: "Boolean", FeatureCategory: "Programming paradigms", FeatureParent: "NULL", FeatureSupportedAlternatives: "3", FeatureCriterionValue: ""},{id: 637113719667784927,FeatureID:"637113719667784927",Feature: "Language-oriented programming(LOP)", MoSCoW: "", Description: "Language-oriented programming(LOP) is a software-development paradigm where &quot;language&quot; is a software building block with the same status as objects, modules and components, and rather than solving problems in general-purpose programming languages, the programmer creates one or more domain-specific languages for the problem first, and solves the problem in those languages.", FeatureDataType: "Boolean", FeatureCategory: "Programming paradigms", FeatureParent: "NULL", FeatureSupportedAlternatives: "4", FeatureCriterionValue: ""},{id: 637113719633698224,FeatureID:"637113719633698224",Feature: "Imperative programming", MoSCoW: "", Description: "Imperative programming is a programming paradigm that uses statements that change a program&quot;s state. In much the same way that the imperative mood in natural languages expresses commands, an imperative program consists of commands for the computer to perform. Imperative programming focuses on describing how a program operates.", FeatureDataType: "Boolean", FeatureCategory: "Programming paradigms", FeatureParent: "NULL", FeatureSupportedAlternatives: "27", FeatureCriterionValue: ""},{id: 637113719599627663,FeatureID:"637113719599627663",Feature: "Generic programming", MoSCoW: "", Description: "Generic programming is a style of computer programming in which algorithms are written in terms of types to-be-specified-later that are then instantiated when needed for specific types provided as parameters.", FeatureDataType: "Boolean", FeatureCategory: "Programming paradigms", FeatureParent: "NULL", FeatureSupportedAlternatives: "17", FeatureCriterionValue: ""},{id: 637113719559324899,FeatureID:"637113719559324899",Feature: "Functional programming", MoSCoW: "", Description: "Functional programming is a programming paradigm�a style of building the structure and elements of computer programs�that treats computation as the evaluation of mathematical functions and avoids changing-state and mutable data. It is a declarative programming paradigm in that programming is done with expressions or declarations instead of statements. Functional code is idempotent: a function&quot;s return value depends only on its arguments, so calling a function with the same value for an argument always produces the same result. This is in contrast to imperative programming where, in addition to a function&quot;s arguments, global program state can affect a function&quot;s resulting value. Eliminating side effects, that is, changes in state that do not depend on the function inputs, can make understanding a program easier, which is one of the key motivations for the development of functional programming.", FeatureDataType: "Boolean", FeatureCategory: "Programming paradigms", FeatureParent: "NULL", FeatureSupportedAlternatives: "32", FeatureCriterionValue: ""},{id: 637113719531914275,FeatureID:"637113719531914275",Feature: "Flow-Based Programming (FBP)", MoSCoW: "", Description: "Flow-based programming (FBP) is a programming paradigm that defines applications as networks of &quot;black box&quot; processes, which exchange data across predefined connections by message passing, where the connections are specified externally to the processes. These black box processes can be reconnected endlessly to form different applications without having to be changed internally. FBP is thus naturally component-oriented.", FeatureDataType: "Boolean", FeatureCategory: "Programming paradigms", FeatureParent: "NULL", FeatureSupportedAlternatives: "5", FeatureCriterionValue: ""},{id: 637113719512545329,FeatureID:"637113719512545329",Feature: "Event-driven programming", MoSCoW: "", Description: "Event-driven programming is a programming paradigm in which the flow of the program is determined by events such as user actions (mouse clicks, key presses), sensor outputs, or messages from other programs or threads. Event-driven programming is the dominant paradigm used in graphical user interfaces and other applications (e.g., JavaScript web applications) that are centered on performing certain actions in response to user input. This is also true of programming for device drivers (e.g., P in USB device driver stacks).", FeatureDataType: "Boolean", FeatureCategory: "Programming paradigms", FeatureParent: "NULL", FeatureSupportedAlternatives: "22", FeatureCriterionValue: ""},{id: 637113719483963040,FeatureID:"637113719483963040",Feature: "Dynamic programming", MoSCoW: "", Description: "Dynamic programming language in computer science is a class of high-level programming languages, which at runtime, execute many common programming behaviours that static programming languages perform during compilation. These behaviors could include an extension of the program, by adding new code, by extending objects and definitions, or by modifying the type system. Although similar behaviors can be emulated in nearly any language, with varying degrees of difficulty, complexity and performance costs, dynamic languages provide direct tools to make use of them.", FeatureDataType: "Boolean", FeatureCategory: "Programming paradigms", FeatureParent: "NULL", FeatureSupportedAlternatives: "21", FeatureCriterionValue: ""},{id: 637113719416960677,FeatureID:"637113719416960677",Feature: "Declarative programming", MoSCoW: "", Description: "Declarative programming is a programming paradigm�a style of building the structure and elements of computer programs�that expresses the logic of a computation without describing its control flow.", FeatureDataType: "Boolean", FeatureCategory: "Programming paradigms", FeatureParent: "NULL", FeatureSupportedAlternatives: "12", FeatureCriterionValue: ""},{id: 637113719405322683,FeatureID:"637113719405322683",Feature: "Data-driven programming", MoSCoW: "", Description: "Data-driven programming is a programming paradigm in which the program statements describe the data to be matched and the processing required rather than defining a sequence of steps to be taken. Standard examples of data-driven languages are the text-processing languages sed and AWK, where the data is a sequence of lines in an input stream � these are thus also known as line-oriented languages � and pattern matching is primarily done via regular expressions or line numbers.", FeatureDataType: "Boolean", FeatureCategory: "Programming paradigms", FeatureParent: "NULL", FeatureSupportedAlternatives: "3", FeatureCriterionValue: ""},{id: 637113719371712018,FeatureID:"637113719371712018",Feature: "Constraint programming", MoSCoW: "", Description: "Constraint programming is a programming paradigm wherein relations between variables are stated in the form of constraints. Constraints differ from the common primitives of imperative programming languages in that they do not specify a step or sequence of steps to execute, but rather the properties of a solution to be found. This makes constraint programming a form of declarative programming. The constraints used in constraint programming are of various kinds: those used in constraint satisfaction problems (e.g., A or B is true), linear inequalities (e.g., x ? 5), and others. Constraints are usually embedded within a programming language or provided via separate software libraries.", FeatureDataType: "Boolean", FeatureCategory: "Programming paradigms", FeatureParent: "NULL", FeatureSupportedAlternatives: "8", FeatureCriterionValue: ""},{id: 637113719291522685,FeatureID:"637113719291522685",Feature: "Aspect-Oriented Programming (AOP)", MoSCoW: "", Description: "Aspect-Oriented Programming (AOP) is a programming paradigm which complements Object-Oriented Programming (OOP) by separating concerns of a software application to improve modularization.", FeatureDataType: "Boolean", FeatureCategory: "Programming paradigms", FeatureParent: "NULL", FeatureSupportedAlternatives: "15", FeatureCriterionValue: ""},{id: 637113719284187499,FeatureID:"637113719284187499",Feature: "Array programming", MoSCoW: "", Description: "Array programming refers to solutions which allow the application of operations to an entire set of values at once. Such solutions are commonly used in scientific and engineering settings.", FeatureDataType: "Boolean", FeatureCategory: "Programming paradigms", FeatureParent: "NULL", FeatureSupportedAlternatives: "20", FeatureCriterionValue: ""},] },{id: 12, FeatureID:"",Feature: "Platforms", MoSCoW: "", Description: "", FeatureDataType: "Category", FeatureCategory: "", FeatureParent: "", FeatureSupportedAlternatives: "", FeatureCriterionValue: "", _children: [{id: 637113719998103189,FeatureID:"637113719998103189",Feature: "Wordpress", MoSCoW: "", Description: "WordPress is a content management system based on PHP and MySQL that is usually used with the MySQL or MariaDB database servers but can also use the SQLite database engine. Features include a plugin architecture and a template system, referred to inside WordPress as Themes.", FeatureDataType: "Boolean", FeatureCategory: "Platforms", FeatureParent: "NULL", FeatureSupportedAlternatives: "3", FeatureCriterionValue: ""},{id: 637113719993036091,FeatureID:"637113719993036091",Feature: "Windows", MoSCoW: "", Description: "Windows OS, computer operating system (OS) developed by Microsoft Corporation to run personal computers (PCs).", FeatureDataType: "Boolean", FeatureCategory: "Platforms", FeatureParent: "NULL", FeatureSupportedAlternatives: "42", FeatureCriterionValue: ""},{id: 637113719983591481,FeatureID:"637113719983591481",Feature: "Web-based", MoSCoW: "", Description: "A web-based application is any program that is accessed over a network connection using HTTP, rather than existing within a device&quot;s memory. Web-based applications often run inside a web browser.", FeatureDataType: "Boolean", FeatureCategory: "Platforms", FeatureParent: "NULL", FeatureSupportedAlternatives: "33", FeatureCriterionValue: ""},{id: 637113719731567677,FeatureID:"637113719731567677",Feature: "Microsoft Azure", MoSCoW: "", Description: "At its core, Azure is a public cloud computing platform�with solutions including Infrastructure as a Service (IaaS), Platform as a Service (PaaS), and Software as a Service (SaaS) that can be used for services such as analytics, virtual computing, storage, networking, and much more.", FeatureDataType: "Boolean", FeatureCategory: "Platforms", FeatureParent: "NULL", FeatureSupportedAlternatives: "26", FeatureCriterionValue: ""},{id: 637113719685644733,FeatureID:"637113719685644733",Feature: "macOS", MoSCoW: "", Description: "macOS (previously Mac OS X and later OS X) is a series of graphical operating systems developed and marketed by Apple Inc. since 2001. It is the primary operating system for Apple&quot;s Mac family of computers. Within the market of desktop, laptop and home computers, and by web usage, it is the second most widely used desktop OS, after Microsoft Windows.", FeatureDataType: "Boolean", FeatureCategory: "Platforms", FeatureParent: "NULL", FeatureSupportedAlternatives: "32", FeatureCriterionValue: ""},{id: 637113719680697552,FeatureID:"637113719680697552",Feature: "Linux", MoSCoW: "", Description: "Linux is a family of open source Unix-like operating systems based on the Linux kernel, an operating system kernel first released on September 17, 1991, by Linus Torvalds. Linux is typically packaged in a Linux distribution.", FeatureDataType: "Boolean", FeatureCategory: "Platforms", FeatureParent: "NULL", FeatureSupportedAlternatives: "39", FeatureCriterionValue: ""},{id: 637113719662787783,FeatureID:"637113719662787783",Feature: "Kubernetes", MoSCoW: "", Description: "Kubernetes is an open-source container-orchestration system for automating application deployment, scaling, and management. It was originally designed by Google, and is now maintained by the Cloud Native Computing Foundation.", FeatureDataType: "Boolean", FeatureCategory: "Platforms", FeatureParent: "NULL", FeatureSupportedAlternatives: "18", FeatureCriterionValue: ""},{id: 637113719657710688,FeatureID:"637113719657710688",Feature: "iOS", MoSCoW: "", Description: "iOS is a mobile operating system created and developed by Apple Inc. exclusively for its hardware. It is the operating system that presently powers many of the company&quot;s mobile devices, including the iPhone, and iPod Touch;", FeatureDataType: "Boolean", FeatureCategory: "Platforms", FeatureParent: "NULL", FeatureSupportedAlternatives: "27", FeatureCriterionValue: ""},{id: 637113719629270760,FeatureID:"637113719629270760",Feature: "IBM Cloud or Watson", MoSCoW: "", Description: "Watson was created as a question answering (QA) computing system that IBM built to apply advanced natural language processing, information retrieval, knowledge representation, automated reasoning, and machine learning technologies to the field of open domain question answering.", FeatureDataType: "Boolean", FeatureCategory: "Platforms", FeatureParent: "NULL", FeatureSupportedAlternatives: "16", FeatureCriterionValue: ""},{id: 637113719619176507,FeatureID:"637113719619176507",Feature: "Heroku", MoSCoW: "", Description: "Heroku is a cloud platform as a service (PaaS) supporting several programming languages. One of the first cloud platforms, Heroku has been in development since June 2007.", FeatureDataType: "Boolean", FeatureCategory: "Platforms", FeatureParent: "NULL", FeatureSupportedAlternatives: "23", FeatureCriterionValue: ""},{id: 637113719607783010,FeatureID:"637113719607783010",Feature: "Google Cloud Platform", MoSCoW: "", Description: "Google Cloud Platform is essentially a public cloud-based machine whose services are delivered to customers on an as-you-go basis, by way of service components. A public cloud lets you leverage its resources to empower the applications you build, as well as to reach a broader base of customers.", FeatureDataType: "Boolean", FeatureCategory: "Platforms", FeatureParent: "NULL", FeatureSupportedAlternatives: "25", FeatureCriterionValue: ""},{id: 637113719474479292,FeatureID:"637113719474479292",Feature: "Docker", MoSCoW: "", Description: "Docker is a set of platform-as-a-service products that use OS-level virtualization to deliver software in packages called containers. Containers are isolated from one another and bundle their own software, libraries and configuration files; they can communicate with each other through well-defined channels.", FeatureDataType: "Boolean", FeatureCategory: "Platforms", FeatureParent: "NULL", FeatureSupportedAlternatives: "34", FeatureCriterionValue: ""},{id: 637113719391981494,FeatureID:"637113719391981494",Feature: "Cross platform / Multiplatform (platform-independent)", MoSCoW: "", Description: "A cross-platform computer product or system is a product or system that can work across multiple types of platforms or operating environments.", FeatureDataType: "Boolean", FeatureCategory: "Platforms", FeatureParent: "NULL", FeatureSupportedAlternatives: "42", FeatureCriterionValue: ""},{id: 637113719299333209,FeatureID:"637113719299333209",Feature: "AWS", MoSCoW: "", Description: "Amazon Web Services is a subsidiary of Amazon that provides on-demand cloud computing platforms to individuals, companies, and governments, on a metered pay-as-you-go basis.", FeatureDataType: "Boolean", FeatureCategory: "Platforms", FeatureParent: "NULL", FeatureSupportedAlternatives: "29", FeatureCriterionValue: ""},{id: 637113719279917777,FeatureID:"637113719279917777",Feature: "Arduino", MoSCoW: "", Description: "Arduino is an open-source electronics platform based on easy-to-use hardware and software. Arduino boards are able to read inputs - light on a sensor, a finger on a button, or a Twitter message - and turn it into an output - activating a motor, turning on an LED, publishing something online.", FeatureDataType: "Boolean", FeatureCategory: "Platforms", FeatureParent: "NULL", FeatureSupportedAlternatives: "18", FeatureCriterionValue: ""},{id: 637113719275570186,FeatureID:"637113719275570186",Feature: "Android", MoSCoW: "", Description: "Android is a mobile operating system based on a modified version of the Linux kernel and other open source software, designed primarily for touchscreen mobile devices such as smartphones and tablets.", FeatureDataType: "Boolean", FeatureCategory: "Platforms", FeatureParent: "NULL", FeatureSupportedAlternatives: "27", FeatureCriterionValue: ""},] },{id: 13, FeatureID:"",Feature: "Qualitative aspects", MoSCoW: "", Description: "", FeatureDataType: "Category", FeatureCategory: "", FeatureParent: "", FeatureSupportedAlternatives: "", FeatureCriterionValue: "", _children: [{id: 637113719862799717,FeatureID:"637113719862799717",Feature: "Scalability", MoSCoW: "", Description: "Scalability is a characteristic of a system, model, or function that describes its capability to cope and perform well under an increased or expanding workload or scope.", FeatureDataType: "Numeric", FeatureCategory: "Qualitative aspects", FeatureParent: "NULL", FeatureSupportedAlternatives: "47", FeatureCriterionValue: "None"},{id: 637113719856883104,FeatureID:"637113719856883104",Feature: "Reusability", MoSCoW: "", Description: "The key idea in reusability is that parts of a computer program written at one time can be or should be used in the construction of other programs written at a later time. Code reuse may imply the creation of a separately maintained version of the reusable assets.", FeatureDataType: "Numeric", FeatureCategory: "Qualitative aspects", FeatureParent: "NULL", FeatureSupportedAlternatives: "47", FeatureCriterionValue: "None"},{id: 637113719795870946,FeatureID:"637113719795870946",Feature: "Popularity in the market", MoSCoW: "", Description: "the state or condition of being liked, admired, or supported by many people.", FeatureDataType: "Numeric", FeatureCategory: "Qualitative aspects", FeatureParent: "NULL", FeatureSupportedAlternatives: "47", FeatureCriterionValue: "None"},{id: 637113719699926575,FeatureID:"637113719699926575",Feature: "Maturity level", MoSCoW: "", Description: "Maturity level specifies certain characteristics for processes, with higher maturity levels having more advanced characteristics and is a step towards achieving a mature process, providing a set of goals which, when satisfied, places an organization at the next level of maturity.", FeatureDataType: "Numeric", FeatureCategory: "Qualitative aspects", FeatureParent: "NULL", FeatureSupportedAlternatives: "47", FeatureCriterionValue: "None"},{id: 637113719690721828,FeatureID:"637113719690721828",Feature: "Maintainability", MoSCoW: "", Description: "A maintainable system is understandable. This means, code is structured, follows conventions (for instance, coding and formatting guidelines), and is either �self-explanatory� or commented so that everyone involved in the development can understand what the code does.", FeatureDataType: "Numeric", FeatureCategory: "Qualitative aspects", FeatureParent: "NULL", FeatureSupportedAlternatives: "47", FeatureCriterionValue: "None"},{id: 637113719623863831,FeatureID:"637113719623863831",Feature: "Human Resource Availability (Developers)", MoSCoW: "", Description: "It indicates the level of availability of potential developers. Note this level may vary over time.", FeatureDataType: "Numeric", FeatureCategory: "Qualitative aspects", FeatureParent: "NULL", FeatureSupportedAlternatives: "47", FeatureCriterionValue: "None"},{id: 637113719356900790,FeatureID:"637113719356900790",Feature: "comprehensive consistent documentation", MoSCoW: "", Description: "Documentation is a set of documents provided on paper, or online, or on digital or analog media, such as audio tape or CDs. Examples are user guides, white papers, on-line help, quick-reference guides. Paper or hard-copy documentation has become less common.", FeatureDataType: "Numeric", FeatureCategory: "Qualitative aspects", FeatureParent: "NULL", FeatureSupportedAlternatives: "47", FeatureCriterionValue: "None"},{id: 637113719270347810,FeatureID:"637113719270347810",Feature: "Accessible and friendly community", MoSCoW: "", Description: "A developer community generally defined is a group of developers gathered in a place to achieve a common goal.", FeatureDataType: "Numeric", FeatureCategory: "Qualitative aspects", FeatureParent: "NULL", FeatureSupportedAlternatives: "47", FeatureCriterionValue: "None"},] },]; DuplicateDataset=JSON.parse((JSON.stringify(FeatureRequirement_datatable)));